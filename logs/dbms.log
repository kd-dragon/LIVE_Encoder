[2022-03-06 23:17:15:4619][main] INFO  -HikariPool-1 - Starting...
[2022-03-06 23:17:15:4734][main] INFO  -1. Connection opened
[2022-03-06 23:17:15:4738][main] INFO  -HikariPool-1 - Start completed.
[2022-03-06 23:17:15:4760][main] INFO  -SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , J.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ
		 FROM TGLIVE_BROADCAST 		A
	LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
		 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ
		WHERE LB_STATUS IN ('1','3','4')

		  AND LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'

		  AND A.LB_DEL_YN = 'N'
		ORDER BY LB_START_DATE
 {executed in 10 msec}
[2022-03-06 23:17:15:4769][main] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:15:4849][HikariPool-1 connection adder] INFO  -2. Connection opened
[2022-03-06 23:17:17:6796][ThreadPoolTaskScheduler-3] INFO  -SELECT STREAMING_SEQ
			 , STREAMING_IP
			 , STREAMING_PORT
		  FROM TGLIVE_SETTING_STREAMING
 {executed in 1 msec}
[2022-03-06 23:17:17:6796][ThreadPoolTaskScheduler-3] INFO  -
|--------------|-------------|---------------|
|streaming_seq |streaming_ip |streaming_port |
|--------------|-------------|---------------|
|--------------|-------------|---------------|

[2022-03-06 23:17:17:6797][ThreadPoolTaskScheduler-3] INFO  -DELETE 
		  FROM TGLIVE_MONITOR_STATUS
		 WHERE TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(YEAR, MONTH, DAY, HOUR, MINUTE), '%Y%m%d%H%i'), NOW()) > 60
 {executed in 0 msec}
[2022-03-06 23:17:17:6798][ThreadPoolTaskScheduler-3] INFO  -SELECT LB_SEQ
		  FROM TGLIVE_BROADCAST
		 WHERE LB_STATUS = '1'
 {executed in 0 msec}
[2022-03-06 23:17:17:6798][ThreadPoolTaskScheduler-3] INFO  -
|-------|
|lb_seq |
|-------|
|-------|

[2022-03-06 23:17:17:6804][HikariPool-1 connection adder] INFO  -3. Connection opened
[2022-03-06 23:17:17:6805][HikariPool-1 connection adder] INFO  -4. Connection opened
[2022-03-06 23:17:17:6806][ThreadPoolTaskScheduler-3] ERROR -1. PreparedStatement.execute() FAILED! SELECT  LIVE_FILE_LOCAL_PATH	
			  , ENCODING_VOD_FILE_PATH
			  , ETC_FILE_UPLOAD_PATH
			  , REPLACE_ROOT_PATH
			  , LIVE_STREAMING_URI
			  , VOD_STREAMING_URI
			  , ENCODER_WORKER_CNT
			  , THUMBNAIL_CNT
			  , THUMBNAIL_TIME
			  , THUMBNAIL_FORMAT
			  , VOD_ORIGINAL_FILE_PATH
			  , VOD_TEMP_FILE_PATH
			  , DEFAULT_THUMBNAIL
			  , LIVE_FILE_NAS_PATH
		  FROM TGLIVE_CONFIG
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=297) Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy92.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:152)
	at com.kdy.live.dao.live.LiveManageDBDAO.selectSystemConfig(LiveManageDBDAO.java:88)
	at com.kdy.live.dao.live.LiveManageDBDAO$$FastClassBySpringCGLIB$$8ae16d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.dao.live.LiveManageDBDAO$$EnhancerBySpringCGLIB$$eaf488d3.selectSystemConfig(<generated>)
	at com.kdy.live.bean.util.system.SystemConfigSelectBean.getSystemConfig(SystemConfigSelectBean.java:23)
	at com.kdy.live.service.system.SystemConfigUpdateService.updateSystemConfig(SystemConfigUpdateService.java:35)
	at com.kdy.live.sched.LiveMonitorScheduler.execute(LiveMonitorScheduler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:362)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:217)
	... 49 common frames omitted
Caused by: java.sql.SQLException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:359)
	... 50 common frames omitted
[2022-03-06 23:17:17:6814][ThreadPoolTaskScheduler-2] ERROR -2. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('InterruptedCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 1 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=298) Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveInterruptedOthersScheduler$$EnhancerBySpringCGLIB$$8968deb5.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:17:17:6814][ThreadPoolTaskScheduler-1] ERROR -3. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('aliveCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 1 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=299) Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveAliveCheckScheduler$$EnhancerBySpringCGLIB$$6f99e797.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:17:17:6814][ThreadPoolTaskScheduler-4] ERROR -4. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('produceLive', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 1 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=300) Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveProduceScheduler$$EnhancerBySpringCGLIB$$2ba6b8a4.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:17:17:6835][ThreadPoolTaskScheduler-4] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:17:6835][ThreadPoolTaskScheduler-2] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:17:6835][ThreadPoolTaskScheduler-1] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:17:6843][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:17:17:6843][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:17:6845][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:17:6966][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:17:6967][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:17:6967][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:17:6967][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:17:6968][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:17:6968][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:22:11852][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:22:11853][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:22:11854][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:22:11854][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:22:11973][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:22:11973][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:23:12090][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:17:23:12090][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:23:12090][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:23:12091][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:23:12091][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:23:12092][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:26:15909][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:26:15909][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:27:16869][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:27:16870][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:27:16871][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:27:16871][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:28:17095][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:28:17095][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:28:17211][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:28:17212][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:28:17213][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:28:17213][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:28:17214][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:28:17215][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:29:19014][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:17:29:19015][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:32:21884][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:32:21886][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:17:32:21886][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:32:21887][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:33:22125][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:17:33:22125][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:33:22218][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:33:22218][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:33:22335][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:33:22335][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:33:22335][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:33:22336][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:33:22336][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:33:22337][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:36:25242][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:36:25242][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:37:26893][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:37:26895][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:37:26895][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:37:26896][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:38:27350][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:38:27350][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:38:27470][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:38:27470][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:38:27471][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:17:38:27471][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:38:27471][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:38:27472][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:39:28362][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:39:28362][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:42:31483][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:42:31483][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:42:31907][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:42:31908][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:42:31908][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:42:31909][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:43:32481][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:43:32481][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:43:32596][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:43:32596][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:43:32596][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:43:32596][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:43:32597][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:43:32597][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:45:34588][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:45:34588][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:47:36918][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:47:36919][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:47:36920][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:47:36920][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:48:37612][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:48:37612][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:48:37713][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:17:48:37713][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:48:37731][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:17:48:37732][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:48:37733][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:48:37733][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:17:48:37733][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:48:37734][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:51:40824][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:51:40824][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:52:41932][TG_NettyFFmpegServerScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:52:41934][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:52:41934][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:52:41934][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:53:42736][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:53:42736][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:53:42853][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:17:53:42853][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:53:42854][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:17:53:42854][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:53:42854][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:53:42855][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:54:43944][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:17:54:43944][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:57:46942][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:17:57:46943][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:17:57:46944][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:17:57:46945][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:17:58:47053][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:17:58:47053][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:17:58:47869][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:58:47869][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:17:58:47984][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:17:58:47985][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:17:58:47985][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:17:58:47985][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:17:58:47986][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:17:58:47986][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:01:50159][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:01:50159][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:02:51951][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:02:51953][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:18:02:51953][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:02:51954][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:03:52988][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:03:52996][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:04:53103][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:04:53103][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:04:53104][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:04:53109][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:18:04:53110][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:04:53111][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:04:53264][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:04:53264][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:07:56372][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:07:56372][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:07:56964][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:07:56965][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:07:56966][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:07:56966][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:09:58115][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:09:58115][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:09:58229][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:09:58230][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:09:58230][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:18:09:58230][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:09:58231][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:09:58231][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:10:59480][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:10:59480][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:12:61969][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:12:61970][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:12:61970][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:12:61970][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:13:62598][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:13:62599][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:14:63243][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:14:63243][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:14:63363][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:14:63364][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:18:14:63364][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:14:63364][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:14:63365][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:14:63365][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:16:65714][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:16:65714][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:17:66851][TG_LiveAliveCheckScheduler] INFO  -SELECT STREAMING_SEQ
			 , STREAMING_IP
			 , STREAMING_PORT
		  FROM TGLIVE_SETTING_STREAMING
 {executed in 1 msec}
[2022-03-06 23:18:17:66851][TG_LiveAliveCheckScheduler] INFO  -
|--------------|-------------|---------------|
|streaming_seq |streaming_ip |streaming_port |
|--------------|-------------|---------------|
|--------------|-------------|---------------|

[2022-03-06 23:18:17:66852][TG_LiveAliveCheckScheduler] INFO  -DELETE 
		  FROM TGLIVE_MONITOR_STATUS
		 WHERE TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(YEAR, MONTH, DAY, HOUR, MINUTE), '%Y%m%d%H%i'), NOW()) > 60
 {executed in 1 msec}
[2022-03-06 23:18:17:66852][TG_LiveAliveCheckScheduler] INFO  -SELECT LB_SEQ
		  FROM TGLIVE_BROADCAST
		 WHERE LB_STATUS = '1'
 {executed in 0 msec}
[2022-03-06 23:18:17:66852][TG_LiveAliveCheckScheduler] INFO  -
|-------|
|lb_seq |
|-------|
|-------|

[2022-03-06 23:18:17:66854][TG_LiveAliveCheckScheduler] ERROR -3. PreparedStatement.execute() FAILED! SELECT  LIVE_FILE_LOCAL_PATH	
			  , ENCODING_VOD_FILE_PATH
			  , ETC_FILE_UPLOAD_PATH
			  , REPLACE_ROOT_PATH
			  , LIVE_STREAMING_URI
			  , VOD_STREAMING_URI
			  , ENCODER_WORKER_CNT
			  , THUMBNAIL_CNT
			  , THUMBNAIL_TIME
			  , THUMBNAIL_FORMAT
			  , VOD_ORIGINAL_FILE_PATH
			  , VOD_TEMP_FILE_PATH
			  , DEFAULT_THUMBNAIL
			  , LIVE_FILE_NAS_PATH
		  FROM TGLIVE_CONFIG
 {FAILED after 0 msec}
java.sql.SQLSyntaxErrorException: (conn=299) Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy92.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:152)
	at com.kdy.live.dao.live.LiveManageDBDAO.selectSystemConfig(LiveManageDBDAO.java:88)
	at com.kdy.live.dao.live.LiveManageDBDAO$$FastClassBySpringCGLIB$$8ae16d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.dao.live.LiveManageDBDAO$$EnhancerBySpringCGLIB$$eaf488d3.selectSystemConfig(<generated>)
	at com.kdy.live.bean.util.system.SystemConfigSelectBean.getSystemConfig(SystemConfigSelectBean.java:23)
	at com.kdy.live.service.system.SystemConfigUpdateService.updateSystemConfig(SystemConfigUpdateService.java:35)
	at com.kdy.live.sched.LiveMonitorScheduler.execute(LiveMonitorScheduler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:362)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:217)
	... 49 common frames omitted
Caused by: java.sql.SQLException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:359)
	... 50 common frames omitted
[2022-03-06 23:18:17:66987][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:17:66989][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:17:66989][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:17:66990][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:19:68382][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:19:68382][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:19:68497][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:18:19:68497][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:19:68498][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:19:68499][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:19:68499][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:19:68500][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:19:68833][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:19:68833][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:22:71954][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:22:71954][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:22:71999][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:22:72000][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:22:72000][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:22:72001][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:24:73516][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:24:73516][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:24:73636][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:24:73637][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:24:73637][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:18:24:73637][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:24:73638][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:24:73638][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:26:75060][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:26:75060][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:27:77012][TG_NettyFFmpegServerScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:27:77014][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:27:77014][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:27:77015][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:29:78179][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:29:78180][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:29:78653][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:29:78653][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:29:78773][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:18:29:78773][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:29:78774][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:29:78774][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:29:78775][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:29:78775][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:32:81287][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:32:81287][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:32:82018][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:32:82020][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:18:32:82020][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:32:82020][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:34:83790][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:34:83790][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:34:83904][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:18:34:83904][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:34:83905][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:18:34:83905][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:34:83905][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:34:83906][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:35:84391][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:35:84392][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:38:87026][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:38:87027][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:38:87027][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:38:87028][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:38:87513][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:38:87513][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:39:88917][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:39:88917][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:40:89036][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:18:40:89037][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:40:89038][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:40:89038][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:18:40:89038][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:40:89039][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:18:41:90622][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:18:41:90623][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:43:92034][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:18:43:92035][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:18:43:92036][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:18:43:92036][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:44:93742][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:18:44:93742][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:18:45:94049][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:45:94049][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:18:45:94168][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:18:45:94168][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:18:45:94168][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:18:45:94169][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:18:45:94169][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:18:45:94169][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:04:4608][main] INFO  -HikariPool-1 - Starting...
[2022-03-06 23:21:04:4719][main] INFO  -1. Connection opened
[2022-03-06 23:21:04:4722][main] INFO  -HikariPool-1 - Start completed.
[2022-03-06 23:21:04:4739][main] INFO  -SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , J.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ
		 FROM TGLIVE_BROADCAST 		A
	LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
		 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ
		WHERE LB_STATUS IN ('1','3','4')

		  AND LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'

		  AND A.LB_DEL_YN = 'N'
		ORDER BY LB_START_DATE
 {executed in 5 msec}
[2022-03-06 23:21:04:4748][main] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:04:4839][HikariPool-1 connection adder] INFO  -2. Connection opened
[2022-03-06 23:21:06:6805][ThreadPoolTaskScheduler-3] INFO  -SELECT STREAMING_SEQ
			 , STREAMING_IP
			 , STREAMING_PORT
		  FROM TGLIVE_SETTING_STREAMING
 {executed in 1 msec}
[2022-03-06 23:21:06:6805][ThreadPoolTaskScheduler-3] INFO  -
|--------------|-------------|---------------|
|streaming_seq |streaming_ip |streaming_port |
|--------------|-------------|---------------|
|--------------|-------------|---------------|

[2022-03-06 23:21:06:6806][ThreadPoolTaskScheduler-3] INFO  -DELETE 
		  FROM TGLIVE_MONITOR_STATUS
		 WHERE TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(YEAR, MONTH, DAY, HOUR, MINUTE), '%Y%m%d%H%i'), NOW()) > 60
 {executed in 0 msec}
[2022-03-06 23:21:06:6807][ThreadPoolTaskScheduler-3] INFO  -SELECT LB_SEQ
		  FROM TGLIVE_BROADCAST
		 WHERE LB_STATUS = '1'
 {executed in 0 msec}
[2022-03-06 23:21:06:6807][ThreadPoolTaskScheduler-3] INFO  -
|-------|
|lb_seq |
|-------|
|-------|

[2022-03-06 23:21:06:6813][HikariPool-1 connection adder] INFO  -3. Connection opened
[2022-03-06 23:21:06:6815][HikariPool-1 connection adder] INFO  -4. Connection opened
[2022-03-06 23:21:06:6815][ThreadPoolTaskScheduler-3] ERROR -1. PreparedStatement.execute() FAILED! SELECT  LIVE_FILE_LOCAL_PATH	
			  , ENCODING_VOD_FILE_PATH
			  , ETC_FILE_UPLOAD_PATH
			  , REPLACE_ROOT_PATH
			  , LIVE_STREAMING_URI
			  , VOD_STREAMING_URI
			  , ENCODER_WORKER_CNT
			  , THUMBNAIL_CNT
			  , THUMBNAIL_TIME
			  , THUMBNAIL_FORMAT
			  , VOD_ORIGINAL_FILE_PATH
			  , VOD_TEMP_FILE_PATH
			  , DEFAULT_THUMBNAIL
			  , LIVE_FILE_NAS_PATH
		  FROM TGLIVE_CONFIG
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=301) Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy92.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:152)
	at com.kdy.live.dao.live.LiveManageDBDAO.selectSystemConfig(LiveManageDBDAO.java:88)
	at com.kdy.live.dao.live.LiveManageDBDAO$$FastClassBySpringCGLIB$$8ae16d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.dao.live.LiveManageDBDAO$$EnhancerBySpringCGLIB$$c4e9ee84.selectSystemConfig(<generated>)
	at com.kdy.live.bean.util.system.SystemConfigSelectBean.getSystemConfig(SystemConfigSelectBean.java:23)
	at com.kdy.live.service.system.SystemConfigUpdateService.updateSystemConfig(SystemConfigUpdateService.java:35)
	at com.kdy.live.sched.LiveMonitorScheduler.execute(LiveMonitorScheduler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:362)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:217)
	... 49 common frames omitted
Caused by: java.sql.SQLException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:359)
	... 50 common frames omitted
[2022-03-06 23:21:06:6822][ThreadPoolTaskScheduler-1] ERROR -3. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('aliveCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=303) Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveAliveCheckScheduler$$EnhancerBySpringCGLIB$$90a2ca7a.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:21:06:6822][ThreadPoolTaskScheduler-4] ERROR -4. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('produceLive', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=304) Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveProduceScheduler$$EnhancerBySpringCGLIB$$4caf9b87.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:21:06:6822][ThreadPoolTaskScheduler-2] ERROR -2. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('InterruptedCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=302) Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveInterruptedOthersScheduler$$EnhancerBySpringCGLIB$$aa71c198.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:21:07:6845][ThreadPoolTaskScheduler-2] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:07:6845][ThreadPoolTaskScheduler-4] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:07:6845][ThreadPoolTaskScheduler-1] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:07:6852][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:21:07:6853][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:07:6855][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:07:6975][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:21:07:6976][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:07:6977][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:07:6978][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:07:6978][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:07:6979][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:12:11862][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:12:11864][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:21:12:11864][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:12:11865][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:12:11983][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:12:11983][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:12:12096][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:12:12097][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:12:12097][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:21:12:12098][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:12:12098][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:12:12098][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:16:15889][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:21:16:15889][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:17:16878][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:17:16881][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:21:17:16881][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:17:16882][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:17:17104][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:17:17104][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:17:17231][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 13 msec}
[2022-03-06 23:21:17:17232][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:17:17232][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:17:17233][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:17:17233][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:17:17234][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:21:19:19015][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:21:19:19015][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:22:21885][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:22:21887][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:21:22:21887][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:22:21888][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:22:22128][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 1 msec}
[2022-03-06 23:21:22:22128][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:22:22249][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:22:22249][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:22:22368][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 1 msec}
[2022-03-06 23:21:22:22368][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:22:22369][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:21:22:22369][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:22:22369][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:22:22370][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:25:25235][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:21:25:25235][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:27:26893][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:27:26895][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 1 msec}
[2022-03-06 23:21:27:26895][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:27:26896][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:27:27379][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:27:27379][TG_WatchManageScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:27:27504][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:21:27:27505][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:27:27506][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:27:27506][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:27:27506][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:27:27507][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:28:28356][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:21:28:28357][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:31:31474][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:21:31:31475][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:32:31903][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:32:31904][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:21:32:31905][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:32:31905][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:32:32522][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:32:32522][TG_LiveFinishCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:21:32:32642][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:32:32643][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:32:32643][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:21:32:32643][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:32:32644][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:32:32644][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:34:34583][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:21:34:34583][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:37:36916][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:37:36918][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:21:37:36919][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:21:37:36920][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
[2022-03-06 23:21:37:37658][TG_LiveStatusCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:37:37658][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:21:37:37712][TG_LiveFinishCheckScheduler] INFO  -/*live.selectByEndDate*/
		SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , C.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ

		 FROM TGLIVE_BROADCAST 		A
    LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
  		 JOIN TGLIVE_BROADCAST_JOB 	C ON A.LB_SEQ = C.LB_SEQ

		WHERE A.LB_STATUS IN (1, 3, 4, 9)
		  AND A.LB_DEL_YN = 'N'
		  AND A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		  AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) <= 0
 {executed in 0 msec}
[2022-03-06 23:21:37:37713][TG_LiveFinishCheckScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:21:37:37775][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:21:37:37775][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:21:37:37775][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:21:37:37776][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:21:37:37776][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:21:37:37776][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:11:4576][main] INFO  -HikariPool-1 - Starting...
[2022-03-06 23:22:11:4689][main] INFO  -1. Connection opened
[2022-03-06 23:22:11:4693][main] INFO  -HikariPool-1 - Start completed.
[2022-03-06 23:22:11:4710][main] INFO  -SELECT A.LB_SEQ
			 , A.LB_TITLE
			 , A.LB_DESC 
			 , A.LB_STATUS
			 , A.LC_SEQ
			 , IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		 	 , A.LB_VOD_SEQ
			 , J.LBJ_PROCESS_ID
			 , A.LB_PRESET_CD
			 , A.LB_VOD_SAVE_YN

			 , A.LB_CATEGORY_SEQ
		 FROM TGLIVE_BROADCAST 		A
	LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
		 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ
		WHERE LB_STATUS IN ('1','3','4')

		  AND LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'

		  AND A.LB_DEL_YN = 'N'
		ORDER BY LB_START_DATE
 {executed in 6 msec}
[2022-03-06 23:22:11:4719][main] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|
|-------|---------|--------|----------|-------|-------|-----------|---------------|-------------|---------------|----------------|

[2022-03-06 23:22:11:4802][HikariPool-1 connection adder] INFO  -2. Connection opened
[2022-03-06 23:22:13:6757][ThreadPoolTaskScheduler-3] INFO  -SELECT STREAMING_SEQ
			 , STREAMING_IP
			 , STREAMING_PORT
		  FROM TGLIVE_SETTING_STREAMING
 {executed in 0 msec}
[2022-03-06 23:22:13:6757][ThreadPoolTaskScheduler-3] INFO  -
|--------------|-------------|---------------|
|streaming_seq |streaming_ip |streaming_port |
|--------------|-------------|---------------|
|--------------|-------------|---------------|

[2022-03-06 23:22:13:6758][ThreadPoolTaskScheduler-3] INFO  -DELETE 
		  FROM TGLIVE_MONITOR_STATUS
		 WHERE TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(YEAR, MONTH, DAY, HOUR, MINUTE), '%Y%m%d%H%i'), NOW()) > 60
 {executed in 0 msec}
[2022-03-06 23:22:13:6760][ThreadPoolTaskScheduler-3] INFO  -SELECT LB_SEQ
		  FROM TGLIVE_BROADCAST
		 WHERE LB_STATUS = '1'
 {executed in 0 msec}
[2022-03-06 23:22:13:6760][ThreadPoolTaskScheduler-3] INFO  -
|-------|
|lb_seq |
|-------|
|-------|

[2022-03-06 23:22:13:6766][HikariPool-1 connection adder] INFO  -3. Connection opened
[2022-03-06 23:22:13:6768][HikariPool-1 connection adder] INFO  -4. Connection opened
[2022-03-06 23:22:13:6769][ThreadPoolTaskScheduler-3] ERROR -2. PreparedStatement.execute() FAILED! SELECT  LIVE_FILE_LOCAL_PATH	
			  , ENCODING_VOD_FILE_PATH
			  , ETC_FILE_UPLOAD_PATH
			  , REPLACE_ROOT_PATH
			  , LIVE_STREAMING_URI
			  , VOD_STREAMING_URI
			  , ENCODER_WORKER_CNT
			  , THUMBNAIL_CNT
			  , THUMBNAIL_TIME
			  , THUMBNAIL_FORMAT
			  , VOD_ORIGINAL_FILE_PATH
			  , VOD_TEMP_FILE_PATH
			  , DEFAULT_THUMBNAIL
			  , LIVE_FILE_NAS_PATH
		  FROM TGLIVE_CONFIG
 {FAILED after 1 msec}
java.sql.SQLSyntaxErrorException: (conn=306) Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:62)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:229)
	at org.mariadb.jdbc.ClientSidePreparedStatement.execute(ClientSidePreparedStatement.java:149)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	at com.sun.proxy.$Proxy92.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:152)
	at com.kdy.live.dao.live.LiveManageDBDAO.selectSystemConfig(LiveManageDBDAO.java:88)
	at com.kdy.live.dao.live.LiveManageDBDAO$$FastClassBySpringCGLIB$$8ae16d84.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:783)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.dao.live.LiveManageDBDAO$$EnhancerBySpringCGLIB$$eaf488d3.selectSystemConfig(<generated>)
	at com.kdy.live.bean.util.system.SystemConfigSelectBean.getSystemConfig(SystemConfigSelectBean.java:23)
	at com.kdy.live.service.system.SystemConfigUpdateService.updateSystemConfig(SystemConfigUpdateService.java:35)
	at com.kdy.live.sched.LiveMonitorScheduler.execute(LiveMonitorScheduler.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:362)
	at org.mariadb.jdbc.ClientSidePreparedStatement.executeInternal(ClientSidePreparedStatement.java:217)
	... 49 common frames omitted
Caused by: java.sql.SQLException: Unknown column 'LIVE_FILE_LOCAL_PATH' in 'field list'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executeQuery(AbstractQueryProtocol.java:359)
	... 50 common frames omitted
[2022-03-06 23:22:13:6775][ThreadPoolTaskScheduler-2] ERROR -1. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('InterruptedCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=305) Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveInterruptedOthersScheduler$$EnhancerBySpringCGLIB$$8968deb5.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'InterruptedCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:22:13:6775][ThreadPoolTaskScheduler-1] ERROR -3. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('aliveCheck', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=307) Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveAliveCheckScheduler$$EnhancerBySpringCGLIB$$6f99e797.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'aliveCheck' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:22:13:6775][ThreadPoolTaskScheduler-4] ERROR -4. PreparedStatement.executeUpdate() FAILED! INSERT INTO shedlock(name, lock_until, locked_at, locked_by) VALUES('produceLive', TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), UTC_TIMESTAMP(3), 'DESKTOP-432QGLB')
 {FAILED after 0 msec}
java.sql.SQLIntegrityConstraintViolationException: (conn=308) Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.createException(ExceptionFactory.java:70)
	at org.mariadb.jdbc.internal.util.exceptions.ExceptionFactory.create(ExceptionFactory.java:158)
	at org.mariadb.jdbc.MariaDbStatement.executeExceptionEpilogue(MariaDbStatement.java:266)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:413)
	at org.mariadb.jdbc.ServerSidePreparedStatement.execute(ServerSidePreparedStatement.java:364)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeUpdate(ServerSidePreparedStatement.java:351)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.executeUpdate(PreparedStatementSpy.java:1080)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$update$2(JdbcTemplate.java:965)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:651)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:960)
	at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:981)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:328)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(NamedParameterJdbcTemplate.java:333)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.lambda$execute$0(JdbcTemplateStorageAccessor.java:111)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.execute(JdbcTemplateStorageAccessor.java:111)
	at net.javacrumbs.shedlock.provider.jdbctemplate.JdbcTemplateStorageAccessor.insertRecord(JdbcTemplateStorageAccessor.java:64)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.doLock(StorageBasedLockProvider.java:81)
	at net.javacrumbs.shedlock.support.StorageBasedLockProvider.lock(StorageBasedLockProvider.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)
	at com.sun.proxy.$Proxy83.lock(Unknown Source)
	at net.javacrumbs.shedlock.core.DefaultLockingTaskExecutor.executeWithLock(DefaultLockingTaskExecutor.java:63)
	at net.javacrumbs.shedlock.spring.aop.MethodProxyScheduledLockAdvisor$LockingInterceptor.invoke(MethodProxyScheduledLockAdvisor.java:86)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:753)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:698)
	at com.kdy.live.sched.LiveProduceScheduler$$EnhancerBySpringCGLIB$$2ba6b8a4.execute(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.runAndReset(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(Unknown Source)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.util.exceptions.MariaDbSqlException.of(MariaDbSqlException.java:34)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:194)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.exceptionWithQuery(AbstractQueryProtocol.java:177)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1145)
	at org.mariadb.jdbc.ServerSidePreparedStatement.executeInternal(ServerSidePreparedStatement.java:406)
	... 43 common frames omitted
Caused by: java.sql.SQLException: Duplicate entry 'produceLive' for key 'PRIMARY'
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readErrorPacket(AbstractQueryProtocol.java:1694)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.readPacket(AbstractQueryProtocol.java:1556)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.getResult(AbstractQueryProtocol.java:1519)
	at org.mariadb.jdbc.internal.protocol.AbstractQueryProtocol.executePreparedQuery(AbstractQueryProtocol.java:1142)
	... 44 common frames omitted
[2022-03-06 23:22:13:6800][ThreadPoolTaskScheduler-1] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:22:13:6800][ThreadPoolTaskScheduler-2] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:22:13:6800][ThreadPoolTaskScheduler-4] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:22:13:6807][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:22:13:6808][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:22:13:6809][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:13:6928][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 0 msec}
[2022-03-06 23:22:13:6929][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:22:13:6930][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:13:6930][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:22:13:6930][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:22:13:6931][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:18:11819][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'produceLive' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:22:18:11821][TG_LiveProduceScheduler] INFO  -/*live.selectByStatusWait*/
		  SELECT 
		  	  * 
		  FROM (
			SELECT A.LB_SEQ
				 , A.LB_TITLE 
				 , A.LB_DESC 
				 , A.LB_STATUS
				 , A.LC_SEQ
				 , IFNULL(B.LC_URL, 'VOD') AS LC_URL
				 , A.LB_VOD_SEQ
				 , J.LBJ_SEQ
				 , J.LBJ_PROCESS_ID
				 , A.LB_PRESET_CD
				 , A.LB_VOD_SAVE_YN

				 , A.LB_CATEGORY_SEQ
				 , A.LB_CHAT_YN

			 FROM TGLIVE_BROADCAST 		A
		LEFT JOIN TGLIVE_CHANNEL 		B ON A.LC_SEQ = B.LC_SEQ
			 JOIN TGLIVE_BROADCAST_JOB 	J ON A.LB_SEQ = J.LB_SEQ

			WHERE A.LB_STATUS= '0'
			  AND A.LB_DEL_YN = 'N'
			  AND (( TIMESTAMPDIFF(SECOND, NOW(), A.LB_START_DATE) <= 0
			        AND TIMESTAMPDIFF(SECOND, NOW(), A.LB_END_DATE) >= 0 ) OR A.LB_END_DATE IS NULL)
		  	ORDER BY A.LB_START_DATE 
		  ) G
		  LIMIT 1
 {executed in 0 msec}
[2022-03-06 23:22:18:11821][TG_LiveProduceScheduler] INFO  -
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|lb_seq |lb_title |lb_desc |lb_status |lc_seq |lc_url |lb_vod_seq |lbj_seq |lbj_process_id |lb_preset_cd |lb_vod_save_yn |lb_category_seq |lb_chat_yn |
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|
|-------|---------|--------|----------|-------|-------|-----------|--------|---------------|-------------|---------------|----------------|-----------|

[2022-03-06 23:22:18:11822][TG_LiveProduceScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'produceLive' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:18:11932][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'InterruptedCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 1 msec}
[2022-03-06 23:22:18:11940][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = TIMESTAMPADD(MICROSECOND, 4000000, UTC_TIMESTAMP(3)), locked_at = UTC_TIMESTAMP(3), locked_by = 'DESKTOP-432QGLB' WHERE name = 'aliveCheck' AND lock_until <= UTC_TIMESTAMP(3)
 {executed in 0 msec}
[2022-03-06 23:22:19:12045][TG_LiveInterruptedOthersScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1
			  THEN 'N'
			  ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
			, C.LBJ_DURATION_UPDATE_DATE
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS = '1'
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO != '2C-F0-5D-3A-F1-52'
		AND TIMESTAMPDIFF(SECOND, C.LBJ_DURATION_UPDATE_DATE, NOW())  >=  20
 {executed in 1 msec}
[2022-03-06 23:22:19:12045][TG_LiveInterruptedOthersScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |lbj_duration_update_date |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|-------------------------|

[2022-03-06 23:22:19:12046][TG_LiveInterruptedOthersScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'InterruptedCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 0 msec}
[2022-03-06 23:22:19:12052][TG_LiveAliveCheckScheduler] INFO  -SELECT
			  A.LB_TITLE
			, A.LB_SEQ
			, A.LB_STATUS
			, A.LB_DESC 
			, A.LB_CATEGORY_SEQ
			, A.LB_SERIAL_NO
			, A.LB_VOD_SAVE_YN
			, C.LBJ_PROCESS_ID
			, CASE WHEN A.LB_END_DATE IS NULL THEN 'N' 
				   WHEN TIMESTAMPDIFF(MINUTE, NOW(), A.LB_END_DATE)  >  1 THEN 'N'
			  	   ELSE 'Y' 
			  END AS END_YN
			, C.LBJ_DURATION
			, C.LBJ_DURATION_UPDATE_DATE
			, C.LBJ_SEQ
			, IFNULL(B.LC_URL, 'VOD') AS LC_URL 
		FROM TGLIVE_BROADCAST A
		LEFT JOIN TGLIVE_CHANNEL B
		ON A.LC_SEQ = B.LC_SEQ
		JOIN TGLIVE_BROADCAST_JOB C
		ON A.LB_SEQ = C.LB_SEQ
		AND A.LB_STATUS IN ('1','4')
		AND A.LB_DEL_YN = 'N'
		WHERE A.LB_SERIAL_NO = '2C-F0-5D-3A-F1-52'
		AND C.LBJ_PROCESS_ID IN (NULL, '0')
 {executed in 0 msec}
[2022-03-06 23:22:19:12053][TG_LiveAliveCheckScheduler] INFO  -
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|lb_title |lb_seq |lb_status |lb_desc |lb_category_seq |lb_serial_no |lb_vod_save_yn |lbj_process_id |end_yn |lbj_duration |lbj_duration_update_date |lbj_seq |lc_url |
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|
|---------|-------|----------|--------|----------------|-------------|---------------|---------------|-------|-------------|-------------------------|--------|-------|

[2022-03-06 23:22:19:12054][TG_LiveAliveCheckScheduler] INFO  -UPDATE shedlock SET lock_until = IF (TIMESTAMPADD(MICROSECOND, 1000000, locked_at) > UTC_TIMESTAMP(3) , TIMESTAMPADD(MICROSECOND, 1000000, locked_at), UTC_TIMESTAMP(3)) WHERE name = 'aliveCheck' AND locked_by = 'DESKTOP-432QGLB'
 {executed in 1 msec}
