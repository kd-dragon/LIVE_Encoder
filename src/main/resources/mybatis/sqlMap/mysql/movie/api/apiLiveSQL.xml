<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="api">

	<sql id="broadcastWhere">
		<!-- 공개구분 -->
		<if test='searchOpen eq "Y".toString() or  searchOpen eq "N".toString() '>
			AND A.LB_OPEN_YN = #{searchOpen}
		</if>
		 
		<!-- 검색어 -->
		<if test='searchText neq null and searchText neq "" '>
			<choose>
				<when test=' searchType eq "title".toString() '>
					AND A.LB_TITLE LIKE '%${searchText}%'
				</when>
				<when test=' searchType eq "id".toString() '>
					AND A.LB_REG_USER_ID  LIKE '%${searchText}%'
				</when>
				<otherwise>
					AND (A.LB_TITLE LIKE '%${searchText}%' OR A.LB_REG_USER_ID  LIKE '%${searchText}%')
				</otherwise>
			</choose>
		</if>
		
		<!-- 시작날짜 -->
		<if test=' searchStDate neq null and searchStDate neq "" '>
			<![CDATA[ AND DATE(A.LB_START_DATE) >= STR_TO_DATE('${searchStDate}', '%Y-%m-%d')]]>
		</if>
		<!-- 종료날짜 -->
		<if test=' searchEnDate neq null and searchEnDate neq "" '>
			<![CDATA[  AND DATE(A.LB_START_DATE) <= STR_TO_DATE('${searchEnDate}', '%Y-%m-%d')]]>
		</if>
	</sql>
	
	<select id="broadcastList" resultType="appBroadcastVO" parameterType="RequestBroadcastListDTO">
	/*api.broadcastList*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , REPLACE(B.LBF_IMG_ENC_PATH, (SELECT web_root_path FROM TGLIVE_CONFIG), '') LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , B.LBF_IMG_ORIGINAL_NM
		     , IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION) as LBJ_DURATION
		     , D.LC_SEQ
		     , D.LC_NAME
		     , A.LB_DESC
	     	 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H시간 %i분') TOTAL_DURATION_FORMAT
	     	 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION
		     , TIME_FORMAT (SEC_TO_TIME (IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION)),  '%H:%i') PASS_DURATION
		     <if test=' @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "0") neq "true".toString() 
					and @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "2") neq "true".toString() '> 
			 , F.FULL_CATEGORY_NAME  
		     </if>
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		   <if test=' @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "0") neq "true".toString() 
					and @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "2") neq "true".toString() '> 
		  LEFT JOIN (				     	
			  			WITH RECURSIVE CATEGORY_MGR AS
						(
						
						    SELECT 	      CATEGORY_SEQ
							 			, UP_CATEGORY_SEQ
										, CATEGORY_NAME
										, CATEGORY_NAME AS FULL_CATEGORY_NAME
										, 1 AS lvl
										, CATEGORY_LEVEL
										
							  FROM	TGMOV_CATEGORY
						
						    WHERE 	UP_CATEGORY_SEQ = 0
						
						UNION ALL
						
						   SELECT 	 	  T1.CATEGORY_SEQ
							 			, T1.UP_CATEGORY_SEQ
										, T1.CATEGORY_NAME
										, CONCAT(T2.FULL_CATEGORY_NAME,'|',T1.CATEGORY_NAME) AS FULL_CATEGORY_NAME
										, lvl + 1 AS lvl
										, T1.CATEGORY_LEVEL
						
						    FROM   TGMOV_CATEGORY	 T1
							JOIN   CATEGORY_MGR      T2 
							  ON T2.CATEGORY_SEQ = T1.UP_CATEGORY_SEQ
						)
						
						SELECT	* 
						  FROM	CATEGORY_MGR
						 WHERE	1=1
		  
		  		 )F
		  	  ON A.LB_CATEGORY_SEQ = F.CATEGORY_SEQ				
		   </if>
		 WHERE 1 = 1
		       AND A.LB_DEL_YN = 'N'
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 
		<include refid="broadcastWhere"/>
		
		<!-- 정렬 -->
		<choose>
			<when test=' @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "0") eq "true".toString() 
					  or @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "2") eq "true".toString() '>
				<choose>
				 	<when test=" orderByType eq 'start'.toString() ">
					 	 ORDER BY A.LB_START_DATE DESC
					 </when>
					 <otherwise>
					 	 ORDER BY A.LB_REG_DATE DESC
					 </otherwise>
				 </choose>
			</when>
			<otherwise>
				 ORDER BY A.LB_STATUS ASC, A.LB_START_DATE DESC
			</otherwise>
		</choose>
		 	LIMIT #{startNum}, #{blockCount}
		 
	</select>
	
	<select id="broadcastListCount" resultType="int" parameterType="RequestBroadcastListDTO">
		SELECT COUNT(*)
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGMOV_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		 WHERE 1 = 1
		 	   AND A.LB_DEL_YN = 'N'
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 <include refid="broadcastWhere"/>
	</select>
	
	<select id="broadcastExcelList" resultType="appBroadcastVO" parameterType="RequestBroadcastListExcelDTO">
		SELECT A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d %H:%i') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
		     , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H시간 %i분') TOTAL_DURATION
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , D.LC_NAME
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		 WHERE 1 = 1
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 <choose>
		 	<when test="orderByType == 'start'">
			 	 ORDER BY A.LB_START_DATE DESC
			 </when>
			 <otherwise>
			 	 ORDER BY A.LB_REG_DATE DESC
			 </otherwise>
		 </choose>
	</select>
	
	<select id="broadcastDetailAPI" resultType="responseBroadcastDetailDTO" parameterType="AppBroadcastVO">
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_CATEGORY_SEQ
		     , NVL(A.LB_DESC, '-') LB_DESC
		     , NVL(A.LB_REG_USER_ID, '-') LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d %H:%i') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
 			 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i:%s') TOTAL_DURATION
		     , TIME_FORMAT (SEC_TO_TIME (IFNULL(IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION), 0 )),  '%H:%i:%s') PASS_DURATION
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , A.LB_VOD_DOWN_YN
		     , A.LB_CATEGORY_SEQ
             , NVL(A.LB_VOD_SEQ, F.MEDIA_ID) LB_VOD_SEQ
		     
		     , (SELECT GROUP_CONCAT(LH_TAG_NAME SEPARATOR '|')
		         FROM TGLIVE_HASHTAG
		        WHERE LB_SEQ = A.LB_SEQ)  AS LH_TAG_NAME
		        
		     , B.LBF_SEQ
		     , B.LBF_ATTACH_ORIGINAL_NM
		     , B.LBF_ATTACH_PATH
		     , B.LBF_ATTACH_SERVER_NM
		     , B.LBF_IMG_ENC_NM
		     , REPLACE(B.LBF_IMG_ENC_PATH, #{webRootPath}, '/') LBF_IMG_ENC_PATH
		     
		     , IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION) LBJ_DURATION
		     , IFNULL(C.LBJ_LOG_DESC, C2.LBJ_LOG_DESC) LBJ_LOG_DESC
		     , IFNULL(C.LBJ_LOG_MSG, C2.LBJ_LOG_MSG) LBJ_LOG_MSG
		     
		     , NVL(C.LBJ_CUR_VIEWER_CNT, 0) LBJ_CUR_VIEWER_CNT
		     
		     , D.LC_SEQ
		     , D.LC_NAME
		     , NVL(D.LC_URL, 'VOD') LC_URL
		     
			 , E.FULL_CATEGORY_NAME
			 
             <!-- VOD 관련 -->
             , F.DURATION AS LB_VOD_RUNTIME
             , F.ENCODING_FILE_NAME AS LB_VOD_NAME
		     , REPLACE(F.ENCODING_FILE_PATH, #{webRootPath},'/') AS LB_VOD_PATH
             , F.ORIGINAL_FILE_NAME as LB_VOD_ORIGIN_NAME
             
		  FROM TGLIVE_BROADCAST 						A
		  
		  JOIN TGLIVE_BROADCAST_FILE 					B
		    ON A.LB_SEQ = B.LB_SEQ  
		    
          LEFT JOIN TGLIVE_BROADCAST_JOB 				C
		    ON A.LB_SEQ = C.LB_SEQ
		    
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG 			C2
		    ON A.LB_SEQ = C2.LB_SEQ		
		      
		  LEFT JOIN TGLIVE_CHANNEL 						D
		    ON A.LC_SEQ = D.LC_SEQ
		    
		  LEFT JOIN (
		  			    WITH RECURSIVE CATEGORY_MGR AS
						(
						
						    SELECT 	      CATEGORY_SEQ
							 			, UP_CATEGORY_SEQ
										, CATEGORY_NAME
										, CATEGORY_NAME AS FULL_CATEGORY_NAME
										, 1 AS lvl
										, CATEGORY_LEVEL
										
							  FROM	TGMOV_CATEGORY
						
						    WHERE 	UP_CATEGORY_SEQ = 0
						
						UNION ALL
						
						   SELECT 	 	  T1.CATEGORY_SEQ
							 			, T1.UP_CATEGORY_SEQ
										, T1.CATEGORY_NAME
										, CONCAT(T2.FULL_CATEGORY_NAME,'|',T1.CATEGORY_NAME) AS FULL_CATEGORY_NAME
										, lvl + 1 AS lvl
										, T1.CATEGORY_LEVEL 
						
						    FROM   TGMOV_CATEGORY	 T1
						    
							JOIN   CATEGORY_MGR      T2 
							  ON T2.CATEGORY_SEQ = T1.UP_CATEGORY_SEQ
						
						)
						SELECT	* 
						  FROM	CATEGORY_MGR
		            )									E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		    
 	      LEFT JOIN TGMOV_VOD						F
            ON A.LB_VOD_SEQ = F.MEDIA_ID
	        OR A.LB_SEQ = F.MEDIA_ID
            
		 WHERE A.LB_SEQ = #{lbSeq}
	</select>
	
	
	<insert id="insertChBroadcast" parameterType="requestBroadcastInsertDTO">
	/*api.insertChBroadcast*/
		INSERT INTO TGLIVE_BROADCAST (
	           LB_SEQ
	         , LB_TITLE
	         , LB_DESC
	         , LB_REG_USER_ID
		     , LB_REG_DATE
		     , LB_STATUS
		     , LB_OPEN_YN
		     , LB_START_DATE
		     , LB_END_DATE
		     , LB_VOD_SAVE_YN
		     <if test=' lbVodSaveYn eq "Y".toString() '>
		     , LB_CATEGORY_SEQ
		     </if>
		     , LC_SEQ
		     , LB_VOD_DOWN_YN
		) VALUES (
		       #{lbSeq}
		     , #{lbTitle}
		     , #{lbDesc}
		     , #{lbRegUserId}
		     , NOW()
		     , '0'
		     , #{lbOpenYn}
		     , STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
		     , STR_TO_DATE(#{lbEndDate}, '%Y-%m-%d %H:%i')
		     , #{lbVodSaveYn}
		     <if test=' lbVodSaveYn eq "Y".toString() '>
		     	<choose>
		     		<when test='lbCategorySeq neq null and lbCategorySeq neq ""'>
				     , #{lbCategorySeq}
		     		</when>
		     		<otherwise>
		     		, (	
		     		    SELECT 	CATEGORY_SEQ
					      FROM	TGMOV_CATEGORY
				         WHERE 	UP_CATEGORY_SEQ = #{rootUpCategoryCode}
		     		)
		     		</otherwise>
		     	</choose>
		     </if>
			, #{lcSeq}
			, #{lbVodDownYn}
		)
	</insert>


	<insert id="insertVodBroadcast" parameterType="requestBroadcastInsertDTO">
	/*api.insertVodBroadcast*/
		INSERT INTO TGLIVE_BROADCAST (
	           LB_SEQ
	         , LB_TITLE
	         , LB_DESC
	         , LB_REG_USER_ID
		     , LB_REG_DATE
		     , LB_STATUS
		     , LB_OPEN_YN
		     , LB_START_DATE
		     , LB_END_DATE
		     , LB_VOD_SEQ
		     , LB_VOD_SAVE_YN
		     , LB_VOD_DOWN_YN
		) VALUES (
		       #{lbSeq}
		     , #{lbTitle}
		     , #{lbDesc}
		     , #{lbRegUserId}
		     , NOW()
		     , '0'
		     , #{lbOpenYn}
		     , STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
		     , (
		     		SELECT DATE_ADD(STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
									,INTERVAL (
												SELECT DURATION + 60
												  FROM tgmov_vod
												 WHERE MEDIA_ID = #{lbVodSeq}) SECOND)
		     )
			 , #{lbVodSeq}
			 ,'N'
			 ,'N'
		)
	</insert>

	
	<insert id="insertBroadcastJobAPI" parameterType="requestBroadcastInsertDTO">
		INSERT INTO TGLIVE_BROADCAST_JOB (
	           LBJ_SEQ
	         , LBJ_PROCESS_ID
	         , LBJ_DURATION
		     , LB_SEQ
		) VALUES (
		       CONCAT(DATE_FORMAT(NOW(), '%Y%m%d'),LPAD(NEXTVAL(SEQUENCE_LBJ_12), 12, '0'))
		     , 0
		     , 0
		     , #{lbSeq}
		)
	</insert>
	
	<select id="selectLbStatus" resultType="String">
	/*api.selectLbStatus*/
	SELECT	LB_STATUS
	  FROM	TGLIVE_BROADCAST
	 WHERE  LB_SEQ = '${value}'
	</select>
	
	<update id="updateLbDelYn">
	/*api.updateLbDelYn*/
	UPDATE	TGLIVE_BROADCAST
	   SET	LB_DEL_YN = 'Y'
	 WHERE	LB_SEQ = '${value}'
	</update>
	
	<delete id="deleteLbj">
	/*api.deleteLbj*/
	DELETE 
	  FROM	TGLIVE_BROADCAST_JOB
	 WHERE	LB_SEQ = '${value}'
	</delete>
	
	<update id="updateChBroadcast">
	/*api.updateChBroadcast*/
	UPDATE	TGLIVE_BROADCAST
	   SET    LB_TITLE = #{lbTitle}
			, LB_DESC = #{lbDesc}
			, LB_START_DATE = STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
			, LB_END_DATE = STR_TO_DATE(#{lbEndDate}, '%Y-%m-%d %H:%i')
			, LB_OPEN_YN =  #{lbOpenYn}
			, LB_VOD_SAVE_YN = #{lbVodSaveYn}
			, LB_VOD_DOWN_YN = #{lbVodDownYn}
			, LC_SEQ = #{lcSeq}
			, LB_CATEGORY_SEQ =
			<if test=' lbVodSaveYn eq "Y".toString() '>
				<choose>
					<when test=' lbCategorySeq neq null and lbCategorySeq neq "" '>
					#{lbCategorySeq}
					</when>
					<otherwise>
					(	
		     		    SELECT 	CATEGORY_SEQ
					      FROM	TGMOV_CATEGORY
				         WHERE 	UP_CATEGORY_SEQ = #{rootUpCategoryCode}
		     		)
					</otherwise>
				</choose>
			</if>
			<if test=' lbVodSaveYn neq "Y".toString() '>
			null
			</if>
			,LB_VOD_SEQ = NULL
     WHERE  LB_SEQ = #{lbSeq}
	</update>

	<update id="updateVodBroadcast">
	/*api.updateVodBroadcast*/
	UPDATE	TGLIVE_BROADCAST
	
	   SET    LB_TITLE = #{lbTitle}
			, LB_DESC = #{lbDesc}
			, LB_START_DATE = STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
			, LB_END_DATE = (
					     		SELECT DATE_ADD(STR_TO_DATE(#{lbStartDate}, '%Y-%m-%d %H:%i')
												,INTERVAL (
															SELECT DURATION + 60
															  FROM tgmov_vod
															 WHERE MEDIA_ID = #{lbVodSeq}) SECOND)
						     )
			, LB_OPEN_YN =  #{lbOpenYn}
			, LB_VOD_SEQ = #{lbVodSeq}
			, LB_VOD_SAVE_YN = 'N'
			, LB_VOD_DOWN_YN = 'N'
			, LC_SEQ = ''
			, LB_CATEGORY_SEQ = NULL
     WHERE  LB_SEQ = #{lbSeq}
	</update>
		
	<select id="checkEncoderWorkerCnt" resultType="_int">
	
	/*api.checkEncoderWorkerCnt*/
	SELECT 
	       CASE
	    	  WHEN COUNT(*) <![CDATA[<]]> ( SELECT encoder_worker_cnt FROM tglive_config ) THEN 1
	    	  ELSE 0
	       END  as checkEncoderWorker
	       
	FROM TGLIVE_BROADCAST
	
	WHERE LB_DEL_YN = 'N'
		  AND LB_STATUS != '2'
		  AND STR_TO_DATE('${lbStartDate}', '%Y-%m-%d %H:%i') <![CDATA[<]]> LB_END_DATE
		  <choose>
		  	<when test=' lbVodSeq neq null and lbVodSeq neq "" '>
		  	 AND (SELECT DATE_ADD (STR_TO_DATE('${lbStartDate}', '%Y-%m-%d %H:%i') ,INTERVAL ( SELECT DURATION + 60
																								 FROM tgmov_vod
																						        WHERE MEDIA_ID = #{lbVodSeq}) SECOND)
				  )<![CDATA[>]]> LB_START_DATE
		  	</when>
		  	<otherwise>
		      AND STR_TO_DATE('${lbEndDate}'  , '%Y-%m-%d %H:%i')  <![CDATA[>]]> LB_START_DATE
		  	</otherwise>
		  </choose>
		 
		  <if test='lbSeq neq null and lbSeq neq "" '>
		  AND LB_SEQ != #{lbSeq}
		  </if>
	</select>
	
	<select id="onAirStatusList" resultType="appBroadcastStatusVO" parameterType="appBroadcastListDTO">
	SELECT LB_STATUS
	  	 , CASE LB_STATUS 
		   		WHEN 1 THEN 'onair'
		   		WHEN 2 THEN 'finish'
				WHEN 3 THEN 'pause'
				WHEN 0 THEN 'wait'
				WHEN 4 THEN 'restart'
				ELSE 'error'
		   END AS LB_STATUS_NM
	     , COUNT(*) AS LB_STATUS_CNT
	  FROM TGLIVE_BROADCAST
	 WHERE LB_STATUS IN ('1','3','9','4') 
	 GROUP BY LB_STATUS
	</select>
	
	<!-- 사용자 라이브 목록 리스트 -->
	<select id="getLiveStatusList" parameterType="RequestUserBroadcastListDTO" resultType="AppBroadcastVO">
		SELECT A.LB_SEQ
			 , A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d %H:%i') LB_REG_DATE
		     , A.LB_STATUS
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
		     , NVL(D.LC_NAME, 'VOD') LC_NAME
		     , B.LBF_IMG_ENC_NM
		     , NVL(C.LBJ_CUR_VIEWER_CNT, 0) LBJ_CUR_VIEWER_CNT
		     , REPLACE(B.LBF_IMG_ENC_PATH, #{webRootPath}, '/') LBF_IMG_ENC_PATH
		     , (SELECT GROUP_CONCAT(LH_TAG_NAME SEPARATOR '|') FROM TGLIVE_HASHTAG WHERE LB_SEQ = A.LB_SEQ) AS LH_TAG_NAME
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
	 LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		 WHERE 1 = 1
	   <foreach collection="lbStatusList" item="item" separator="," open="AND A.LB_STATUS IN (" close=")">
		   #{item}
	   </foreach>
 	 	   AND A.LB_OPEN_YN = 'Y'
 	   <if test="searchTag != null and searchTag != ''">
		   AND EXISTS (SELECT LB_SEQ 
		   				 FROM TGLIVE_HASHTAG E 
		   				WHERE E.LH_TAG_NAME = #{searchTag} 
		   				  AND E.LB_SEQ = A.LB_SEQ
		   			)
 	   </if>
	 	 ORDER BY A.LB_START_DATE
	</select>
	
	<!-- 라이브 상태 확인 (1:진행중/2:종료/3:일시정지) -->
	<select id="liveStatusCheck" parameterType="String" resultType="String">
		SELECT CASE WHEN COUNT(*)=0 THEN '2'
				  	WHEN COUNT(*)=1 AND LB_STATUS='3' THEN '3'
				  	ELSE '1'
			   END STATUS
		  FROM TGLIVE_BROADCAST 
		 WHERE LB_SEQ = #{value}
		   AND TIMESTAMPDIFF(SECOND, NOW(), LB_END_DATE) > 0
	</select>
	
	
	<!-- 라이브 종료 -->
	<update id="liveBroadcastStatusFinish" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		SET   LB_END_DATE = NOW()
		WHERE LB_SEQ = #{value}
	</update>
	
	<!-- 라이브 채팅 파일 다운로드 관련 -->
	<select id="getLiveInfo" parameterType="String" resultType="AppBroadcastVO">
		SELECT 
			  LB_SEQ
			, LB_TITLE
			, DATE_FORMAT(LB_START_DATE, '%Y') AS START_YEAR
			, DATE_FORMAT(LB_START_DATE, '%m') AS START_MONTH
			, DATE_FORMAT(LB_START_DATE, '%d') AS START_DAY
			, DATE_FORMAT(LB_END_DATE, '%Y') AS END_YEAR
			, DATE_FORMAT(LB_END_DATE, '%m') AS END_MONTH
			, DATE_FORMAT(LB_END_DATE, '%d') AS END_DAY
			, (SELECT UPLOAD_ROOT_PATH FROM TGLIVE_CONFIG) AS UPLOAD_ROOT_PATH
		FROM TGLIVE_BROADCAST
		WHERE LB_SEQ = #{lbSeq}
	</select>	
	
	<!-- 라이브 일시중지 및 재시작 -->
	<update id="livePauseAndStart" parameterType="AppBroadcastVO">
		UPDATE TGLIVE_BROADCAST
		SET 
			<choose>
				<when test="lbStatus == 1">
					LB_STATUS = '3'
				</when>
				<when test="lbStatus == 3">
					LB_STATUS = '4'
				</when>
				<when test="lbStatus == 4">
					LB_STATUS = '3'
				</when>
			</choose>
		WHERE LB_SEQ = #{lbSeq}
	</update>
	
	<!-- 라이브, 재시작 >> 일시중지 시 Date Update -->
	<update id="pauseDateUpdate">
		UPDATE TGLIVE_BROADCAST_JOB
		SET LBJ_PAUSE_DATE = NOW()
		WHERE LB_SEQ = #{lbSeq}
	</update>
	
	
	<select id="broadcastListExcel" resultType="appBroadcastVO" parameterType="RequestBroadcastListDTO">
	/*api.broadcastList*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , REPLACE(B.LBF_IMG_ENC_PATH, (SELECT web_root_path FROM TGLIVE_CONFIG), '') LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , B.LBF_IMG_ORIGINAL_NM
		     , IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION) as LBJ_DURATION
		     , D.LC_SEQ
		     , D.LC_NAME
		     , A.LB_DESC
	     	 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H시간 %i분') TOTAL_DURATION_FORMAT
	     	 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION
		     , TIME_FORMAT (SEC_TO_TIME (IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION)),  '%H:%i') PASS_DURATION
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		 WHERE 1 = 1
		       AND A.LB_DEL_YN = 'N'
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 
		<include refid="broadcastWhere"/>
		
		<!-- 정렬 -->
		<choose>
			<when test=' @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "0") eq "true".toString() 
					  or @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "2") eq "true".toString() '>
				<choose>
				 	<when test=" orderByType eq 'start'.toString() ">
					 	 ORDER BY A.LB_START_DATE DESC
					 </when>
					 <otherwise>
					 	 ORDER BY A.LB_REG_DATE DESC
					 </otherwise>
				 </choose>
			</when>
			<otherwise>
				 ORDER BY A.LB_STATUS ASC, A.LB_START_DATE DESC
			</otherwise>
		</choose>
	</select>
	
	
<!-- ===================================================================================================== -->
	
	<select id="broadcastAll" resultType="ApiBroadcastVO" parameterType="RequestBroadcastAllDTO">
	/*api.broadcastAll*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_DESC
		     , A.LB_REG_USER_ID
		     , DATE_FORMAT(A.LB_REG_DATE, '%Y.%m.%d') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , DATE_FORMAT(A.LB_START_DATE, '%Y.%m.%d %H:%i') LB_START_DATE
		     , DATE_FORMAT(A.LB_END_DATE, '%Y.%m.%d %H:%i') LB_END_DATE
		     , REPLACE(B.LBF_IMG_ENC_PATH, (SELECT web_root_path FROM TGLIVE_CONFIG), '') LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION) as LBJ_DURATION
		     , D.LC_NAME
	     	 , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION
		     , TIME_FORMAT (SEC_TO_TIME (IFNULL(C.LBJ_DURATION, C2.LBJ_DURATION)),  '%H:%i') PASS_DURATION
			 , F.FULL_CATEGORY_NAME  
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN (				     	
			  			WITH RECURSIVE CATEGORY_MGR AS
						(
						
						    SELECT 	      CATEGORY_SEQ
							 			, UP_CATEGORY_SEQ
										, CATEGORY_NAME
										, CATEGORY_NAME AS FULL_CATEGORY_NAME
										, 1 AS lvl
										, CATEGORY_LEVEL
										
							  FROM	TGMOV_CATEGORY
						
						    WHERE 	UP_CATEGORY_SEQ = #{rootUpCategoryCode}
						
						UNION ALL
						
						   SELECT 	 	  T1.CATEGORY_SEQ
							 			, T1.UP_CATEGORY_SEQ
										, T1.CATEGORY_NAME
										, CONCAT(T2.FULL_CATEGORY_NAME,'|',T1.CATEGORY_NAME) AS FULL_CATEGORY_NAME
										, lvl + 1 AS lvl
										, T1.CATEGORY_LEVEL
						
						    FROM   TGMOV_CATEGORY	 T1
							JOIN   CATEGORY_MGR      T2 
							  ON T2.CATEGORY_SEQ = T1.UP_CATEGORY_SEQ
						)
						
						SELECT	* 
						  FROM	CATEGORY_MGR
						 WHERE	1=1
		  
		  		 )F
		  	  ON A.LB_CATEGORY_SEQ = F.CATEGORY_SEQ				
		 WHERE 1 = 1
		       AND A.LB_DEL_YN = 'N'
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 
		<include refid="broadcastWhere"/>
		
		<!-- 정렬 -->
		<choose>
			<when test=' @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "0") eq "true".toString() 
					  or @com.kdy.app.bean.util.ListContainCheck@contain(searchStatus, "2") eq "true".toString() '>
				<choose>
				 	<when test=" orderByType eq 'start'.toString() ">
					 	 ORDER BY A.LB_START_DATE DESC
					 </when>
					 <otherwise>
					 	 ORDER BY A.LB_REG_DATE DESC
					 </otherwise>
				 </choose>
			</when>
			<otherwise>
				 ORDER BY A.LB_STATUS ASC, A.LB_START_DATE DESC
			</otherwise>
		</choose>
		 
	</select>
	
	<select id="broadcastAllCount" resultType="int" parameterType="RequestBroadcastAllDTO">
		SELECT COUNT(*)
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGMOV_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		 WHERE 1 = 1
		 	   AND A.LB_DEL_YN = 'N'
		 <if test="searchStatus != null &amp;&amp; searchStatus.size() > 0">
		 	AND A.LB_STATUS IN (
		 	<foreach collection="searchStatus" item="item" index="index" separator=",">
				#{item}
			</foreach>
			)
		 </if>
		 <include refid="broadcastWhere"/>
	</select>
	
	<select id="api.broadcastStatus" resultType="String">
	SELECT lb_status
	FROM tglive_broadcast
	WHERE lb_seq = #{lbSeq}
	</select>

	<update id="liveBroadcastStatusPause" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		   SET LB_STATUS = '3'
		 WHERE LB_SEQ = #{lbSeq}
	</update>
	
	<update id="liveBroadcastStatusRestart" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		   SET LB_STATUS = '4'
		 WHERE LB_SEQ = #{lbSeq}
	</update>
	
	<select id="categoryList" resultType="CategoryVO">
	/*api.categoryList*/
		SELECT 
		   R1.*,
		   '-' USER_NAME 
		FROM (
				WITH RECURSIVE CATEGORY_MGR AS
				(
				
				    SELECT 	      CATEGORY_SEQ
								, CATEGORY_NAME
								, CATEGORY_NAME AS FULL_CATEGORY_NAME
								, COMENT
								, USE_YN
					  FROM	TGMOV_CATEGORY
				
				    WHERE 	UP_CATEGORY_SEQ = #{rootUpCategoryCode}
				
				UNION ALL
				
				   SELECT 	 	  C.CATEGORY_SEQ
								, C.CATEGORY_NAME
								, CONCAT(CM.FULL_CATEGORY_NAME,' > ',C.CATEGORY_NAME) AS FULL_CATEGORY_NAME
								, C.COMENT
								, C.USE_YN
				    FROM   TGMOV_CATEGORY	 C
					JOIN   CATEGORY_MGR      CM 
					      ON CM.CATEGORY_SEQ = C.UP_CATEGORY_SEQ
				
				)
				
				SELECT * FROM CATEGORY_MGR
				WHERE 1=1
				 
			 ) R1 
			WHERE 1=1
			 AND USE_YN = 'Y'
	</select>
	<select id="findBroadcast" resultType="AppBroadcastVO">
	SELECT   LB_SEQ
	       , LB_STATUS	
	  FROM tglive_broadcast
  	 WHERE lb_seq= #{lbSeq}
	</select>
</mapper>