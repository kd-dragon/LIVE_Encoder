<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app_live">

	<select id="onAirList" resultType="appBroadcastVO" parameterType="appBroadcastListDTO">
	/*app_live.onAirList*/
	SELECT * FROM
	(
		SELECT Z.*, ROWNUM RN
		FROM
		(
				SELECT A.LB_SEQ
				     , A.LB_TITLE
				     , NVL(A.LB_DESC, '-') LB_DESC
				     , NVL(A.LB_REG_USER_ID, '-') LB_REG_USER_ID
				     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
				     , A.LB_STATUS
				     , A.LB_OPEN_YN
				     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
				     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
					 , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
				     , (TRUNC(NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/(60*60))) ||':'|| LPAD(TRUNC(MOD((NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/60),60)),2,0) AS PASS_DURATION
					 , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || '시간 ' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) || '분' AS TOTAL_DURATION_FORMAT
				     , A.LB_VOD_SAVE_YN
				     , A.LB_CHAT_YN
				     , REPLACE(B.LBF_IMG_ENC_PATH, #{replaceRootPath}, '/') LBF_IMG_ENC_PATH
				     , B.LBF_IMG_ENC_NM
				     , B.LBF_IMG_ORIGINAL_NM
				     , NVL(C.LBJ_DURATION, C2.LBJ_DURATION) LBJ_DURATION
				     , D.LC_SEQ
				     , D.LC_NAME
				     , F.FULL_CATEGORY_NAME  
				     , G.LU_NAME AS REG_USER_NAME
				  FROM TGLIVE_BROADCAST A
				  JOIN TGLIVE_BROADCAST_FILE B
				    ON A.LB_SEQ = B.LB_SEQ
				  LEFT JOIN TGLIVE_BROADCAST_JOB C
				    ON A.LB_SEQ = C.LB_SEQ
				  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
				    ON A.LB_SEQ = C2.LB_SEQ
				  LEFT JOIN TGLIVE_CHANNEL D
				    ON A.LC_SEQ = D.LC_SEQ
				  LEFT JOIN (		
								SELECT CATEGORY_SEQ
								     , CATEGORY_NAME
								     , LEVEL lvl
								     , UP_CATEGORY_SEQ
								     , SUBSTR(SYS_CONNECT_BY_PATH(CATEGORY_NAME, '|'), 2) FULL_CATEGORY_NAME
								  FROM TGLIVE_CATEGORY
								 START WITH UP_CATEGORY_SEQ = #{rootUpCategoryCode}
								CONNECT BY PRIOR CATEGORY_SEQ = UP_CATEGORY_SEQ
								 ORDER BY CATEGORY_SEQ		     	
				  
				  		 )F
				  	  ON A.LB_CATEGORY_SEQ = F.CATEGORY_SEQ
				  JOIN TGLIVE_USER G
				 	  ON A.LB_REG_USER_ID = G.LU_ID
				 WHERE 1 = 1
				        AND A.LB_DEL_YN = 'N'
				 <choose>
					 <when test="searchStatus != null &amp;&amp; searchStatus != ''">
					 	AND A.LB_STATUS = #{searchStatus}
					 </when>
					 <otherwise>
					 	AND A.LB_STATUS IN ('1','3','4','8','9')
					 </otherwise>
				 </choose>
				 
				  	<if test='!authSeq.equals("20210000000000000000")'>
				 		AND A.LB_CATEGORY_SEQ = #{categorySeq}
				  	</if>
				  	
				 ORDER BY A.LB_STATUS ASC, A.LB_START_DATE DESC
				 
		)Z
		WHERE ROWNUM &lt;= (#{blockCount} * #{currentPage}) 
	)
	WHERE RN &gt; (#{blockCount} * #{currentPage}) - #{blockCount}
	</select>
	
	<select id="onAirListCount" resultType="int" parameterType="appBroadcastListDTO">
	/*app_live.onAirListCount*/
		SELECT COUNT(*)
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		  	ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGLIVE_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		 WHERE 1 = 1
		 	   AND A.LB_DEL_YN = 'N'
		 <choose>
			 <when test="searchStatus != null &amp;&amp; searchStatus != ''">
			 	AND A.LB_STATUS = #{searchStatus}
			 </when>
			 <otherwise>
			 	AND A.LB_STATUS IN ('1','3','4','8','9')
			 </otherwise>
		 </choose>
		 
		 <if test='!authSeq.equals("20210000000000000000")'>
		 		AND A.LB_CATEGORY_SEQ = #{categorySeq}
	  	 </if>
	</select>
	
	<sql id="searchLive">
		<!-- 상태 -->
		<if test='searchStatus neq null and searchStatus neq"" '>
			AND A.LB_STATUS = #{searchStatus}
		</if>
		<!-- 공개여부 -->
		<if test='searchOpen neq null and searchOpen neq"" '>
			AND A.LB_OPEN_YN = #{searchOpen}
		</if>
		
		<if test='authSeq != null and !authSeq.equals("20210000000000000000")'>
		 		AND A.LB_CATEGORY_SEQ = #{categorySeq}
	  	 </if>
		
		<!-- 검색어 -->
		<if test='searchText neq null and searchText neq"" '>
			<choose>
				<when test="searchTextType == 'TITLE'">
					AND A.LB_TITLE LIKE '%${searchText}%'
				</when>
				<when test="searchTextType == 'REGUSER'">
					AND F.LU_NAME LIKE '%${searchText}%'
				</when>
				<otherwise>
					AND (A.LB_TITLE LIKE '%${searchText}%' OR A.LB_REG_USER_ID  LIKE '%${searchText}%')
				</otherwise>
			</choose>
		</if>
		<if test="searchStDate != null and searchStDate != ''and searchEnDate != null and searchEnDate != ''">
			AND TO_CHAR(A.LB_START_DATE,'YYYY-MM-DD') BETWEEN #{searchStDate} AND #{searchEnDate}
		</if>
	</sql>
	
	<select id="waitList" resultType="appBroadcastVO" parameterType="appBroadcastListDTO">
	/*app_live.waitList*/
	SELECT * FROM
	(
		SELECT Z.*, ROWNUM RN
		FROM
		(
				SELECT A.LB_SEQ
				     , A.LB_TITLE
				     , A.LB_REG_USER_ID
				     , TO_CHAR(A.LB_REG_DATE, 'YYYY-MM-DD HH24:MI') LB_REG_DATE
				     , A.LB_STATUS
				     , A.LB_OPEN_YN
				     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
				     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
				     , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
					 , '00:00' AS PASS_DURATION
				     , A.LB_VOD_SAVE_YN
				     , A.LB_CHAT_YN
				     , B.LBF_IMG_ENC_PATH
				     , B.LBF_IMG_ENC_NM
				     , B.LBF_IMG_ORIGINAL_NM
				     , C.LBJ_DURATION
				     , D.LC_SEQ
				     , D.LC_NAME
				     , F.LU_NAME AS REG_USER_NAME
				  FROM TGLIVE_BROADCAST A
				  JOIN TGLIVE_BROADCAST_FILE B
				    ON A.LB_SEQ = B.LB_SEQ
				  LEFT JOIN TGLIVE_BROADCAST_JOB C
				    ON A.LB_SEQ = C.LB_SEQ
				  LEFT JOIN TGLIVE_CHANNEL D
				    ON A.LC_SEQ = D.LC_SEQ
				  LEFT JOIN TGLIVE_CATEGORY E
				    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
				  JOIN TGLIVE_USER F
				  ON A.LB_REG_USER_ID = F.LU_ID
				 WHERE A.LB_STATUS = '0'
				       AND A.LB_DEL_YN = 'N'
				       <include refid="searchLive"/>
			  <choose>
			 	<when test='orderByType == "start"'>
				 	 ORDER BY A.LB_START_DATE DESC
				 </when>
				 <otherwise>
				 	 ORDER BY A.LB_REG_DATE DESC
				 </otherwise>
			 </choose>
		
		)Z
		WHERE ROWNUM &lt;= (#{blockCount} * #{currentPage}) 
	)
	WHERE RN &gt; (#{blockCount} * #{currentPage}) - #{blockCount}		
		
	</select>
	
	<select id="waitListCount" resultType="int" parameterType="appBroadcastListDTO">
		SELECT COUNT(*)
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGLIVE_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		  JOIN TGLIVE_USER F
		  ON A.LB_REG_USER_ID = F.LU_ID
		 WHERE A.LB_STATUS = '0'
		       AND A.LB_DEL_YN = 'N'
		       <include refid="searchLive"/>
	</select>
	
	<select id="getLpStatus" resultType="String">
	/*app_live.getLpStatus*/
	SELECT	LB_STATUS
	  FROM	TGLIVE_BROADCAST
	 WHERE  LB_SEQ = '${value}'
	</select>
	
	<delete id="updateLbDelYn">
	/*app_live.updateLbDelYn*/
	UPDATE	TGLIVE_BROADCAST
	   SET	LB_DEL_YN = 'Y'
	   	 , 	LB_END_DATE = SYSDATE
	 WHERE	LB_SEQ = '${value}'
	</delete>
	
	<delete id="deleteLbj">
	/*app_live.deleteLbj*/
	DELETE FROM	TGLIVE_BROADCAST_JOB
	      WHERE	LB_SEQ = '${value}'
	</delete>
	
	<update id="updateBroadcast" parameterType="appBroadcastVO">
	/*app_live.updateBroadcast*/
	UPDATE	TGLIVE_BROADCAST
	
	   SET    LB_TITLE = #{lbTitle}
			, LB_DESC = #{lbDesc}
			, LB_START_DATE = TO_DATE(#{lbStartDate}, 'YYYY-MM-DD HH24:MI')
			, LB_END_DATE = TO_DATE(#{lbEndDate}, 'YYYY-MM-DD HH24:MI')
			, LB_OPEN_YN =  #{lbOpenYn}
			, LB_CHAT_YN = #{lbChatYn}
			, LB_CHAT_ANNYM = #{lbChatAnnym}
		<choose>
			<when test=" lcSeq eq 'VOD'.toString() ">
			, LB_VOD_SAVE_YN = 'N'
			, LB_VOD_DOWN_YN = 'N'
<!-- 			, LB_PRESET_CD =  null -->
		    , LC_SEQ = ''
		    , LB_VOD_SEQ = #{lbVodSeq}
			, LB_CATEGORY_SEQ = null
			</when>
			<otherwise>
			, LB_VOD_SAVE_YN = #{lbVodSaveYn}
			, LB_VOD_DOWN_YN = #{lbVodDownYn}
<!-- 			, LB_PRESET_CD =  #{lbPresetCd} -->
			, LC_SEQ = #{lcSeq}
			, LB_VOD_SEQ = null
			, LB_CATEGORY_SEQ = #{lbCategorySeq}
			</otherwise>
		</choose>
     WHERE  LB_SEQ = #{lbSeq}
	
	</update>
	<select id="finishList" resultType="appBroadcastVO" parameterType="appBroadcastListDTO">
	/*app_live.finishList*/
	SELECT * FROM
	(
		SELECT Z.*, ROWNUM RN
		FROM
		(
				SELECT A.LB_SEQ
				     , A.LB_TITLE
				     , A.LB_REG_USER_ID
				     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
				     , A.LB_STATUS
				     , A.LB_OPEN_YN
				     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
				     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
				     , A.LB_VOD_SAVE_YN
				     , A.LB_CHAT_YN
				     , B.LBF_IMG_ENC_PATH
				     , B.LBF_IMG_ENC_NM
				     , B.LBF_IMG_ORIGINAL_NM
				     , D.LC_SEQ
				     , D.LC_NAME
				     , NVL(C.LBJ_DURATION, C2.LBJ_DURATION)  as LBJ_DURATION
				     , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
					 , (TRUNC(NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/(60*60))) ||':'|| LPAD(TRUNC(MOD((NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/60),60)),2,0) AS PASS_DURATION
				     , F.LU_NAME AS REG_USER_NAME
				  FROM TGLIVE_BROADCAST A
				  JOIN TGLIVE_BROADCAST_FILE B
				    ON A.LB_SEQ = B.LB_SEQ
				  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C
				    ON A.LB_SEQ = C.LB_SEQ
				  LEFT JOIN TGLIVE_BROADCAST_JOB C2
		   		    ON A.LB_SEQ = C2.LB_SEQ
				  LEFT JOIN TGLIVE_CHANNEL D
				    ON A.LC_SEQ = D.LC_SEQ
				  JOIN TGLIVE_USER F
				  ON A.LB_REG_USER_ID = F.LU_ID
				 WHERE A.LB_STATUS IN ('2', '5')
				 	   AND A.LB_DEL_YN = 'N'
				 	   <include refid="searchLive"/>
			  <choose>
			 	 <when test='orderByType == "start"'>
				 	 ORDER BY A.LB_START_DATE DESC
				 </when>
				 <otherwise>
			 		 ORDER BY A.LB_REG_DATE DESC
				 </otherwise>
			  </choose>
		)Z
		WHERE ROWNUM &lt;= (#{blockCount} * #{currentPage}) 
	)
	WHERE RN &gt; (#{blockCount} * #{currentPage}) - #{blockCount}
	</select>
	
	<select id="finishListCount" resultType="int" parameterType="appBroadcastListDTO">
		SELECT COUNT(*)
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGLIVE_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		  JOIN TGLIVE_USER F
		    ON A.LB_REG_USER_ID = F.LU_ID
		 WHERE A.LB_STATUS IN ('2', '5')
		 	   AND A.LB_DEL_YN = 'N'
		 	    <include refid="searchLive"/>
	</select>
	
	<select id="onAirStatusList" resultType="appBroadcastStatusVO" parameterType="appBroadcastListDTO">
		SELECT LB_STATUS
		  	 , CASE LB_STATUS 
			   		WHEN '1' THEN 'onair'
			   		WHEN '2' THEN 'finish'
					WHEN '3' THEN 'pause'
					WHEN '0' THEN 'wait'
					WHEN '4' THEN 'restart'
					WHEN '8' THEN 'start'
					ELSE 'error'
			   END AS LB_STATUS_NM
		     , COUNT(*) AS LB_STATUS_CNT
		  FROM TGLIVE_BROADCAST
		 WHERE LB_STATUS IN ('1','3','4','8','9') 
		 AND LB_DEL_YN = 'N'
		 GROUP BY LB_STATUS
	</select>
	
	<select id="broadcastDetail" resultType="appBroadcastVO" parameterType="appBroadcastVO">
	/* app_live.broadcastDetail */
	SELECT * FROM
	(
			SELECT A.LB_SEQ
			     , A.LB_TITLE
			     , A.LB_CATEGORY_SEQ
			     , NVL(A.LB_DESC, '') LB_DESC
			     , NVL(A.LB_REG_USER_ID, '-') LB_REG_USER_ID
			     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
			     , A.LB_STATUS
			     , A.LB_OPEN_YN
			     , A.LB_PRESET_CD
			     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
			     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
				 , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
				 , (TRUNC(NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/(60*60))) ||':'|| LPAD(TRUNC(MOD((NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/60),60)),2,0) AS PASS_DURATION
			     , A.LB_VOD_SAVE_YN
			     , A.LB_CHAT_YN
			     , A.LB_CHAT_ANNYM
			     , A.LB_VOD_DOWN_YN
	             , NVL(F.VOD_SEQ, A.LB_VOD_SEQ) LB_VOD_SEQ
	             
			     , (
			     	SELECT
			     	 	LISTAGG(LH_TAG_NAME, '|') 
			     	FROM TGLIVE_HASHTAG 
			     	WHERE LB_SEQ = A.LB_SEQ
			       ) AS LB_TAG_NAME
			        
			     , B.LBF_SEQ
			     , B.LBF_ATTACH_ORIGINAL_NM
			     , B.LBF_ATTACH_PATH
			     , B.LBF_ATTACH_SERVER_NM
			     , B.LBF_IMG_ENC_NM
			     , REPLACE(B.LBF_IMG_ENC_PATH, #{replaceRootPath}, '/') LBF_IMG_ENC_PATH
			     
			     , NVL(C.LBJ_DURATION, C2.LBJ_DURATION) LBJ_DURATION
			     , NVL(C.LBJ_LOG_DESC, C2.LBJ_LOG_DESC) LBJ_LOG_DESC
			     , NVL(C.LBJ_LOG_MSG, C2.LBJ_LOG_MSG) LBJ_LOG_MSG
			     
			     , D.LC_SEQ
			     , D.LC_NAME
			     , NVL(D.LC_URL, 'VOD') LC_URL
			     
				 , E.FULL_CATEGORY_NAME
				 , E.CATEGORY_NAME
				 
				 <!-- VOD 관련 -->
	             , G.DURATION AS LB_VOD_RUNTIME
	             , G.ENCODING_FILE_NAME AS LB_VOD_NAME
			     , REPLACE(G.ENCODING_FILE_PATH, #{replaceRootPath},'') AS LB_VOD_PATH
			     , F.VOD_TITLE
	             , (SELECT LU_NAME FROM TGLIVE_USER WHERE LU_ID = A.LB_REG_USER_ID) AS REG_USER_NAME
	             
			  FROM TGLIVE_BROADCAST 					A
			  
			  JOIN TGLIVE_BROADCAST_FILE 				B
			    ON A.LB_SEQ = B.LB_SEQ
			    
			  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG 		C
		        ON A.LB_SEQ = C.LB_SEQ
		        
	  	 	  LEFT JOIN TGLIVE_BROADCAST_JOB 	   		C2
	   		    ON A.LB_SEQ = C2.LB_SEQ
	   		    
			  LEFT JOIN TGLIVE_CHANNEL 					D
			    ON A.LC_SEQ = D.LC_SEQ
			    
			  LEFT JOIN (
			  				SELECT    CATEGORY_SEQ
							        , CATEGORY_NAME
							        , LEVEL lv
							        , UP_CATEGORY_SEQ
							        , SUBSTR(SYS_CONNECT_BY_PATH(CATEGORY_NAME, '|'), 2) FULL_CATEGORY_NAME
							  FROM  TGLIVE_CATEGORY
					    START WITH  UP_CATEGORY_SEQ = #{rootUpCategoryCode}
						CONNECT BY  PRIOR CATEGORY_SEQ = UP_CATEGORY_SEQ
						  ORDER BY  CATEGORY_SEQ	
	
			  ) 										E
			  ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
			  
		    LEFT JOIN TGLIVE_VOD						F
		           ON A.LB_VOD_SEQ = F.VOD_SEQ
		           OR A.LB_SEQ = F.LB_SEQ
		           
		    LEFT JOIN TGLIVE_VOD_FILE					G
		    	   ON F.VOD_SEQ = G.VOD_SEQ
		    	   
			WHERE A.LB_SEQ = #{lbSeq}
	
	) Z
	WHERE ROWNUM = 1
	</select>
	
	<insert id="insertBroadcast" parameterType="appBroadcastVO">
		INSERT INTO TGLIVE_BROADCAST (
	           LB_SEQ
	         , LB_TITLE
	         , LB_DESC
	         , LB_REG_USER_ID
		     , LB_REG_DATE
		     , LB_STATUS
		     , LB_OPEN_YN
		     , LB_CHAT_YN
		     , LB_CHAT_ANNYM
		     , LB_START_DATE
		     , LB_END_DATE
<!-- 		     <if test=' lbVodSaveYn eq "Y".toString() '> -->
		     , LB_CATEGORY_SEQ
<!-- 		     </if> -->
		     , LB_VOD_SEQ
		     , LB_VOD_SAVE_YN
		     , LB_VOD_DOWN_YN
		     , LC_SEQ
<!-- 		     , LB_PRESET_CD -->
		) VALUES (
		       #{lbSeq}
		     , #{lbTitle}
		     , #{lbDesc}
		     , #{lbRegUserId}
		     , SYSDATE
		     <choose>
			 	<when test="lbStatus != null and lbStatus != ''">
			 	 , #{lbStatus}
			 	</when>
			 	<otherwise>
		    	 , '0'
			 	</otherwise>
			 </choose>
		     , #{lbOpenYn}
		     , #{lbChatYn}
		     , #{lbChatAnnym}
		     , TO_DATE(#{lbStartDate}, 'YYYY-MM-DD HH24:MI')
		     , TO_DATE(#{lbEndDate}, 'YYYY-MM-DD HH24:MI')
<!-- 		     <if test=' lbVodSaveYn eq "Y".toString() '> -->
		     , #{lbCategorySeq}
<!-- 		     </if> -->
	      <choose>
			 <when test=" lcSeq eq 'VOD'.toString() ">
		     , #{lbVodSeq}
			 , 'N'
			 , 'N'
			 , ' '
<!-- 			 , null -->
			 </when>
			 <otherwise>
			 , null
		     , #{lbVodSaveYn}
		     , #{lbVodDownYn}
			 , #{lcSeq}
<!-- 		     , #{lbPresetCd} -->
			 </otherwise>
		 </choose>
		)
	</insert>
	
	
	<insert id="insertBroadcastJob" parameterType="appBroadcastVO">
		INSERT INTO TGLIVE_BROADCAST_JOB (
	           LBJ_SEQ
	         , LBJ_PROCESS_ID
	         , LBJ_DURATION
		     , LBJ_PAUSE_DATE
		     , LBJ_CUR_VIEWER_CNT
		     , LBJ_VOD_LAST_POSITION
		     , LBJ_LOG_REG_DATE
		     , LBJ_LOG_MSG
		     , LBJ_LOG_DESC
		     , LB_SEQ
		) VALUES (
			   TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQUENCE_LBJ_12.NEXTVAL, 12, '0')
		     , #{lbjProcessId}
		     , #{lbjDuration}
		     , TO_DATE(#{lbjPauseDate}, 'YYYYYMMDDHH24MI')
		     , #{lbjCurViewerCnt}
		     , #{lbjVodLastPosition}
		     , TO_DATE(#{lbjLogRegDate}, 'YYYYYMMDDHH24MI')
		     , #{lbjLogMsg}
		     , #{lbjLogDesc}
		     , #{lbSeq}
		)
	</insert>
	
	<insert id="insertBroadcastJobLog" parameterType="appBroadcastVO">
		INSERT INTO TGLIVE_BROADCAST_JOB_LOG (
	           LBJ_SEQ
	         , LBJ_PROCESS_ID
	         , LBJ_DURATION
		     , LBJ_PAUSE_DATE
		     , LBJ_CUR_VIEWER_CNT
		     , LBJ_VOD_LAST_POSITION
		     , LBJ_REG_DATE
		     , LBJ_MSG
		     , LBJ_DESC
		     , LB_SEQ
		) SELECT 
		       LBJ_SEQ
	         , LBJ_PROCESS_ID
	         , LBJ_DURATION
		     , LBJ_PAUSE_DATE
		     , LBJ_CUR_VIEWER_CNT
		     , LBJ_VOD_LAST_POSITION
		     , SYSDATE
		     , #{lbjMsg}
		     , #{lbjDesc}
		     , LB_SEQ
			FROM TGLIVE_BROADCAST_JOB
		   WHERE LBJ_SEQ = #{lbjSeq}
	</insert>
	
	
	<update id="updateAttachFile">
	/*app_live.updateAttachFile*/
	UPDATE	tglive_broadcast_file
	
	   SET	  LBF_ATTACH_PATH = #{lbfAttachPath}
	        , LBF_ATTACH_ORIGINAL_NM = #{lbfAttachOriginalNm}
	        , LBF_ATTACH_SERVER_NM = #{lbfAttachServerNm}
	        
	 WHERE	LB_SEQ = #{lbSeq}
	</update>
	
	<update id="updateThumbnail">
	/*app_live.updateThumbnail*/
	UPDATE	tglive_broadcast_file
	
	   SET	  LBF_IMG_PATH = #{lbfImgPath}
	        , LBF_IMG_ORIGINAL_NM = #{lbfImgOriginalNm}
	        , LBF_IMG_SERVER_NM = #{lbfImgServerNm}
	        , LBF_IMG_ENC_PATH = #{lbfImgEncPath}
	        , LBF_IMG_ENC_NM = #{lbfImgEncNm}
	        
	 WHERE	LB_SEQ = #{lbSeq}
	</update>

	<select id="selectFile" resultType="AppBroadcastVO">
	/*app_live.selectFile*/
	SELECT	*
	  FROM	tglive_broadcast_file
	 WHERE	LB_SEQ = #{value}
	</select>
	
	<!-- 라이브 종료하기 -->
	<update id="liveBroadcastStatusEnd" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		   SET LB_END_DATE = SYSDATE
		 WHERE LB_SEQ = #{value}
	</update>
	
	<!-- 라이브 일시중지 및 재시작-->
	<update id="livePauseAndStart" parameterType="AppBroadcastVO">
		UPDATE TGLIVE_BROADCAST
		SET
			<choose>
				<when test="lbStatus == 1">
					LB_STATUS = '3'
				</when>
				<when test="lbStatus == 3">
					LB_STATUS = '4'
				</when>
				<when test="lbStatus == 4">
					LB_STATUS = '3'
				</when>
			</choose>
		WHERE LB_SEQ = #{lbSeq}
	</update>
	
	<!-- 라이브, 재시작 >> 일시중지 시 Date Update -->
	<update id="pauseDateUpdate" parameterType="AppBroadcastVO">
		UPDATE TGLIVE_BROADCAST_JOB 
		   SET LBJ_PAUSE_DATE = SYSDATE
		     , LBJ_DURATION = #{lbjDuration} 
		 WHERE LB_SEQ = #{lbSeq}
	</update>
	
	<select id="selectCategoryList" resultType="CategoryVO">
	/*app_live.selectCategoryList*/
				
    	SELECT 	      CATEGORY_SEQ
		 			, UP_CATEGORY_SEQ
					, CATEGORY_NAME
					, CATEGORY_NAME AS FULL_CATEGORY_NAME
					, 1 AS lvl
					, REG_USER_ID
					, USE_YN
					
		  	FROM	TGLIVE_CATEGORY
				
			WHERE 1=1
<!-- 		      AND UP_CATEGORY_SEQ != #{rootUpCategoryCode} -->
			  AND USE_YN = 'Y'
			ORDER BY CATEGORY_SEQ
	</select>
	
	<!-- 워터마크 설정 -->
	<select id="selectWatermark" resultType="WatermarkVO">
		SELECT
			  WM_SEQ
			, POSITION
			, IMG_FILE_PATH
			, IMG_SERVER_FILE_NAME
			, USE_YN
			, REPLACE(IMG_FILE_PATH, #{replaceRootPath}, '/') IMG_WEB_PATH
		FROM TGLIVE_WATERMARK
		WHERE WM_SEQ = '1'
	</select>
	
	<!-- 라이브 채팅 파일 다운로드 관련 -->
	<select id="getLiveInfo" parameterType="String" resultType="AppBroadcastVO">
		SELECT 
			  LB_SEQ
			, LB_TITLE 
			, TO_CHAR(LB_START_DATE, 'YYYY') AS START_YEAR
			, TO_CHAR(LB_START_DATE, 'MM') AS START_MONTH
			, TO_CHAR(LB_START_DATE, 'DD') AS START_DAY
			, TO_CHAR(LB_END_DATE, 'YYYY') AS END_YEAR
			, TO_CHAR(LB_END_DATE, 'MM') AS END_MONTH
			, TO_CHAR(LB_END_DATE, 'DD') AS END_DAY
			, (SELECT ETC_FILE_UPLOAD_PATH FROM TGLIVE_CONFIG) AS ETC_FILE_UPLOAD_PATH
		FROM TGLIVE_BROADCAST
		WHERE LB_SEQ = #{lbSeq}
	</select>
	
	
	<select id="checkEncoderWorkerCnt" resultType="_int">
	/*app_live.checkEncoderWorkerCnt*/
	<![CDATA[
	
	SELECT 
	       CASE
	    	  WHEN CNT < ( SELECT encoder_worker_cnt FROM tglive_config ) THEN 1
	    	  ELSE 0
	       END  as checkEncoderWorker
	 FROM(
	 
			  SELECT COUNT(*) as CNT
				FROM TGLIVE_BROADCAST
			   WHERE LB_DEL_YN = 'N'
					 AND LB_STATUS != '2'
					 AND TO_DATE('${lbStartDate}', 'YYYY-MM-DD HH24:MI') < LB_END_DATE
				     AND TO_DATE('${lbEndDate}'  , 'YYYY-MM-DD HH24:MI') > LB_START_DATE
				]]>
					  <if test='lbSeq neq null and lbSeq neq "" '>
					  AND LB_SEQ != #{lbSeq}
					  </if>
	 )
	</select>
	
	
	 <sql id="liveVod_where">
    	AND (C.CATEGORY_SEQ = #{lbCategorySeq}
		 OR C.UP_CATEGORY_SEQ = #{lbCategorySeq}
		 OR C.UP_CATEGORY_SEQ IN (SELECT CATEGORY_SEQ 
								   FROM TGLIVE_CATEGORY
								  WHERE UP_CATEGORY_SEQ = #{lbCategorySeq}))
    	<if test="contentsSeq != null and contentsSeq != ''">
		 <!--   AND B.CONTENTS_ID = #{contentsSeq} -->
		 		AND B.VOD_SEQ = #{contentsSeq}
		   </if>
		 <if test="videoTitle != null and videoTitle != ''">
		 	<!-- AND ORIGINAL_FILE_NAME LIKE '%${videoTitle}%' -->
		 		AND VOD_TITLE LIKE '%${videoTitle}%'
		 </if>
    </sql>
    
	<!-- 라이브 VOD 불러오기 > 비디오 리스트 -->
	<select id="getLiveVodList" parameterType="LiveVodDTO" resultType="LiveVodVO">
	SELECT * FROM
	(
		SELECT T.*, ROWNUM RN
		FROM
		(
			 SELECT Z.*
			 FROM (
			 	SELECT
			 		  A.VOD_SEQ AS MEDIA_ID
			 		, C.CATEGORY_NAME
			 		, A.VOD_TITLE AS CONTENTS_TITLE
			 		, B.ENCODING_FILE_NAME AS VIDEO_NAME
			 		, B.ENCODING_FILE_PATH
			 		, (TRUNC(B.DURATION/(60*60))) ||':'|| LPAD(TRUNC(MOD((B.DURATION/60),60)),2,0) || ':' ||  LPAD(TRUNC(MOD(B.DURATION,60)),2,0) AS DURATION
			 		, B.DURATION AS RUN_TIME
			 		, TO_CHAR(A.REG_DATE, 'YYYY-MM-DD') AS REG_DATE
			 		, A.REG_USER_ID
			 	FROM TGLIVE_VOD A
			 	JOIN TGLIVE_VOD_FILE B
			 	ON A.VOD_SEQ = B.VOD_SEQ
			 	AND A.DEL_YN = 'N'
			 	JOIN TGLIVE_CATEGORY C
			 	ON A.CATEGORY_SEQ = C.CATEGORY_SEQ
			 	WHERE A.VOD_STATUS = '1'
			 	<include refid="liveVod_where" />
			 ) Z
			 ORDER BY MEDIA_ID DESC
		
		)T
		WHERE ROWNUM &lt;= (#{blockCount} * #{currentPage}) 
	)
	WHERE RN &gt; (#{blockCount} * #{currentPage}) - #{blockCount}
	

	</select>
	
	<!-- 라이브 VOD 불러오기 > 비디오 리스트 Count-->
	<select id="getLiveVodListCount" parameterType="LiveVodDTO" resultType="int">
	/*app_live.getLiveVodListCount*/
		 SELECT COUNT(*)
		 FROM TGLIVE_VOD A
		 JOIN TGLIVE_VOD_FILE B
		 ON A.VOD_SEQ = B.VOD_SEQ
		 AND A.DEL_YN = 'N'
		 JOIN TGLIVE_CATEGORY C
		 ON A.CATEGORY_SEQ = C.CATEGORY_SEQ
		 WHERE A.VOD_STATUS = '1'
		 <include refid="liveVod_where" />
	</select>    
	
	    <!-- 라이브 VOD 불러오기 > Contents List 가져오기 -->
    <select id="getContentsListByCateSeq" parameterType="String" resultType="LiveContentsVO">
    /*app_live.getContentsListByCateSeq*/
    	SELECT VOD_SEQ CONTENTS_ID
    	     , VOD_TITLE CONTENTS_TITLE
		  FROM TGLIVE_VOD A
		  JOIN TGLIVE_CATEGORY B 
			ON A.CATEGORY_SEQ = B.CATEGORY_SEQ
		 WHERE A.DEL_YN = 'N'
		   AND B.CATEGORY_SEQ = #{lbCategorySeq}
			OR B.UP_CATEGORY_SEQ = #{lbCategorySeq}
			OR B.UP_CATEGORY_SEQ IN (SELECT CATEGORY_SEQ 
									   FROM TGLIVE_CATEGORY
									  WHERE UP_CATEGORY_SEQ = #{lbCategorySeq})
    </select>
    
    <!-- 라이브 상태 확인 (1:진행중/2:종료/3:일시정지) -->
	<select id="liveStatusCheck" parameterType="String" resultType="String">
		SELECT 
    		CASE WHEN CNT = 0 THEN '2'
        	WHEN CNT = 1 AND LB_STATUS='3' THEN '3'
    		ELSE '1' END STATUS 
		FROM (    
        	SELECT 
              	  COUNT(*) AS CNT
            	, LB_STATUS  
        	FROM TGLIVE_BROADCAST 
        	WHERE LB_SEQ = #{value}
        	AND TRUNC((LB_END_DATE - SYSDATE) * 24 * 60 * 60) > 0 
        	GROUP BY LB_STATUS
       ) Z
	</select>
	
    
    <select id="finishListExcel" resultType="appBroadcastVO" parameterType="AppBroadcastListDTO">
	/*app_live.finishListExcel*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
		     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , B.LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , B.LBF_IMG_ORIGINAL_NM
		     , D.LC_SEQ
		     , D.LC_NAME
		     , NVL(C.LBJ_DURATION, C2.LBJ_DURATION)  as LBJ_DURATION
		     , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
<!-- 		     , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION -->
			 , (TRUNC(NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/(60*60))) ||':'|| LPAD(TRUNC(MOD((NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/60),60)),2,0) AS PASS_DURATION
<!-- 		     , TIME_FORMAT (SEC_TO_TIME (NVL(C.LBJ_DURATION, C2.LBJ_DURATION)),  '%H:%i') PASS_DURATION -->
		     , F.LU_NAME AS REG_USER_NAME
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C2
   		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  JOIN TGLIVE_USER F
		    ON A.LB_REG_USER_ID = F.LU_ID
		 WHERE A.LB_STATUS IN ('2', '9', '5')
		 	   AND A.LB_DEL_YN = 'N'
		 	   <include refid="searchLive"/>
	  <choose>
	 	 <when test='orderByType == "start"'>
		 	 ORDER BY A.LB_START_DATE DESC
		 </when>
		 <otherwise>
	 		 ORDER BY A.LB_REG_DATE DESC
		 </otherwise>
	  </choose>
	</select>
	
	<select id="waitListExcel" resultType="appBroadcastVO" parameterType="appBroadcastListDTO">
	/*app_live.waitList*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , A.LB_REG_USER_ID
		     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
		     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
		     , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
<!-- 		     , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION -->
			 , '00:00' PASS_DURATION
<!-- 		     , TIME_FORMAT (SEC_TO_TIME (0),  '%H:%i') PASS_DURATION -->
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , B.LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , B.LBF_IMG_ORIGINAL_NM
		     , C.LBJ_DURATION
		     , D.LC_SEQ
		     , D.LC_NAME
		     , F.LU_NAME AS REG_USER_NAME
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN TGLIVE_CATEGORY E
		    ON A.LB_CATEGORY_SEQ = E.CATEGORY_SEQ
		  JOIN TGLIVE_USER F
		  	ON A.LB_REG_USER_ID = F.LU_ID
		 WHERE A.LB_STATUS = '0'
		       AND A.LB_DEL_YN = 'N'
		       <include refid="searchLive"/>
	  <choose>
	 	<when test='orderByType == "start"'>
		 	 ORDER BY A.LB_START_DATE DESC
		 </when>
		 <otherwise>
		 	 ORDER BY A.LB_REG_DATE DESC
		 </otherwise>
	 </choose>
	</select>
	
	<select id="onAirListExcel" resultType="appBroadcastVO" parameterType="appBroadcastListDTO">
	/*app_live.onAirList*/
		SELECT A.LB_SEQ
		     , A.LB_TITLE
		     , NVL(A.LB_DESC, '-') LB_DESC
		     , NVL(A.LB_REG_USER_ID, '-') LB_REG_USER_ID
		     , TO_CHAR(A.LB_REG_DATE, 'YYYY.MM.DD HH24:MI') LB_REG_DATE
		     , A.LB_STATUS
		     , A.LB_OPEN_YN
		     , TO_CHAR(A.LB_START_DATE, 'YYYY.MM.DD HH24:MI') LB_START_DATE
		     , TO_CHAR(A.LB_END_DATE, 'YYYY.MM.DD HH24:MI') LB_END_DATE
		     , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || ':' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) AS TOTAL_DURATION
<!-- 		     , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H:%i') TOTAL_DURATION -->
			 , (TRUNC(NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/(60*60))) ||':'|| LPAD(TRUNC(MOD((NVL(C.LBJ_DURATION, C2.LBJ_DURATION)/60),60)),2,0) AS PASS_DURATION
<!-- 		     , TIME_FORMAT (SEC_TO_TIME (NVL(C.LBJ_DURATION, C2.LBJ_DURATION)),  '%H:%i') PASS_DURATION -->
			 , TRUNC((A.LB_END_DATE-A.LB_START_DATE)*24) || '시간 ' || TRUNC(mod((A.LB_END_DATE - A.LB_START_DATE)*24,1)*60) || '분' AS TOTAL_DURATION_FORMAT
<!-- 		     , TIME_FORMAT(TIMEDIFF(A.LB_END_DATE, A.LB_START_DATE), '%H시간 %i분') TOTAL_DURATION_FORMAT -->
		     , A.LB_VOD_SAVE_YN
		     , A.LB_CHAT_YN
		     , REPLACE(B.LBF_IMG_ENC_PATH, #{replaceRootPath}, '/') LBF_IMG_ENC_PATH
		     , B.LBF_IMG_ENC_NM
		     , B.LBF_IMG_ORIGINAL_NM
		     , NVL(C.LBJ_DURATION, C2.LBJ_DURATION) LBJ_DURATION
		     , D.LC_SEQ
		     , D.LC_NAME
		     , F.FULL_CATEGORY_NAME  
		     , G.LU_NAME AS REG_USER_NAME
		  FROM TGLIVE_BROADCAST A
		  JOIN TGLIVE_BROADCAST_FILE B
		    ON A.LB_SEQ = B.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB C
		    ON A.LB_SEQ = C.LB_SEQ
		  LEFT JOIN TGLIVE_BROADCAST_JOB_LOG C2
		    ON A.LB_SEQ = C2.LB_SEQ
		  LEFT JOIN TGLIVE_CHANNEL D
		    ON A.LC_SEQ = D.LC_SEQ
		  LEFT JOIN (	
		  
		  				SELECT    CATEGORY_SEQ
						        , CATEGORY_NAME
						        , LEVEL lv
						        , UP_CATEGORY_SEQ
						        , SUBSTR(SYS_CONNECT_BY_PATH(CATEGORY_NAME, '|'), 2) FULL_CATEGORY_NAME
						  FROM  TGLIVE_CATEGORY
				    START WITH  UP_CATEGORY_SEQ = 1
					CONNECT BY  PRIOR CATEGORY_SEQ = UP_CATEGORY_SEQ
					  ORDER BY  CATEGORY_SEQ
					  				     	
<!-- 			  			WITH RECURSIVE CATEGORY_MGR AS -->
<!-- 						( -->
						
<!-- 						    SELECT 	      CATEGORY_SEQ -->
<!-- 							 			, UP_CATEGORY_SEQ -->
<!-- 										, CATEGORY_NAME -->
<!-- 										, CATEGORY_NAME AS FULL_CATEGORY_NAME -->
<!-- 										, 1 AS lvl -->
<!-- 										, REG_USER_ID -->
										
<!-- 							  FROM	TGLIVE_CATEGORY -->
						
<!-- 						    WHERE 	UP_CATEGORY_SEQ = #{rootUpCategoryCode} -->
						
<!-- 						UNION ALL -->
						
<!-- 						   SELECT 	 	  T1.CATEGORY_SEQ -->
<!-- 							 			, T1.UP_CATEGORY_SEQ -->
<!-- 										, T1.CATEGORY_NAME -->
<!-- 										, CONCAT(T2.FULL_CATEGORY_NAME,'|',T1.CATEGORY_NAME) AS FULL_CATEGORY_NAME -->
<!-- 										, lvl + 1 AS lvl -->
<!-- 										, T1.REG_USER_ID -->
						
<!-- 						    FROM   TGLIVE_CATEGORY	 T1 -->
<!-- 							JOIN   CATEGORY_MGR      T2  -->
<!-- 							      ON T2.CATEGORY_SEQ = T1.UP_CATEGORY_SEQ -->
						
<!-- 						) -->
						
<!-- 						SELECT	*  -->
<!-- 						  FROM	CATEGORY_MGR -->
<!-- 						 WHERE	1=1 -->
		  
		  		 )F
		  	  ON A.LB_CATEGORY_SEQ = F.CATEGORY_SEQ
		  	  JOIN TGLIVE_USER G
		  	  ON A.LB_REG_USER_ID = G.LU_ID
		 WHERE 1 = 1
		        AND A.LB_DEL_YN = 'N'
		 <choose>
			 <when test='searchStatus != null &amp;&amp; searchStatus != ""'>
			 	AND A.LB_STATUS = #{searchStatus}
			 </when>
			 <otherwise>
			 	AND A.LB_STATUS IN ('1','3','4','9')
			 </otherwise>
		 </choose>
		 
		 <if test='authSeq != null and !authSeq.equals("20210000000000000000")'>
		 		AND A.LB_CATEGORY_SEQ = #{categorySeq}
	  	 </if>
	  	 
		 ORDER BY A.LB_STATUS ASC, A.LB_START_DATE DESC
	</select>
	
	<!-- 라이브 종료하기(스트리밍 오류) -->
	<update id="liveErrorStatusEnd" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		   SET LB_END_DATE = SYSDATE
		 WHERE LB_SEQ = #{value}
	</update>
	
	<!-- 라이브 재시작 (스트리밍 오류) -->
	<update id="liveErrorStatusRestart" parameterType="String">
		UPDATE TGLIVE_BROADCAST
		   SET LB_STATUS = '4'
		 WHERE LB_SEQ = #{value}
	</update>
	
	<select id="chattingListExcel" resultType="chatDTO" parameterType="AppBroadcastListDTO">
	/*app_live.chattingListExcel*/
		SELECT
	  		  LB_TITLE
	  		, CONTENT
	  		, CASE 
	  		  WHEN LB_CHAT_ANNYM = 'Y' THEN '익명'
	  		  ELSE USER_ID
	  		  END AS USER_ID
	  		, CASE 
	  		  WHEN LB_CHAT_ANNYM = 'Y' THEN '익명'
	  		  ELSE USER_NAME
	  		  END AS USER_NAME
	  		, USER_TYPE
	  		, "DATE"
     	FROM 
     	( 
     		SELECT 
     			A.LB_TITLE			AS LB_TITLE
			 ,  A.CHAT_CONTENT 		AS CONTENT
			 ,  A.CHAT_USER_ID 		AS USER_ID
			 ,  A.CHAT_USER_NAME 	AS USER_NAME
			 ,  A.CHAT_USER_TYPE 	AS USER_TYPE
			 ,  A.CHAT_REG_DATE 	AS "DATE"
			 ,  B.LB_CHAT_ANNYM
		  FROM TGLIVE_CHAT_HISTORY A
		  JOIN TGLIVE_BROADCAST B
		  ON A.LB_SEQ = B.LB_SEQ
		 WHERE A.LB_SEQ = #{lbSeq}
		 ORDER BY CHAT_REG_DATE
		) T1
	</select>
	
	<select id="chattingListCountBySeq" resultType="int" parameterType="String">
	/*app_live.chattingListCountBySeq*/
		SELECT COUNT(*)
		  FROM TGLIVE_CHAT_HISTORY 
		 WHERE LB_SEQ = #{value}
	</select>
	
	<!-- 라이브 채팅 Insert -->
	<insert id="insertLiveChatting" parameterType="java.util.ArrayList">
	/*app_live.insertLiveChatting*/
		 <foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM DUAL">
			INTO TGLIVE_CHAT_HISTORY (
			      CHAT_SEQ
				, LB_TITLE
				, CHAT_CONTENT
				, CHAT_USER_ID
				, CHAT_USER_NAME
				, CHAT_USER_TYPE
				, CHAT_REG_DATE
				, LB_SEQ
				, VOD_SAVE_YN
				, VOD_CHAT_TIME
				
			) VALUES(
			      GETSEQ('SEQUENCE_CHAT_SEQ')
				, #{item.lbTitle}
				, #{item.content}
				, #{item.userId}			
				, #{item.userName}			
				, #{item.userType}			
				, TO_DATE(#{item.date}, 'YYYY-MM-DD HH24:MI:SS')
				, #{item.lbSeq}
				, #{item.vodSaveYn}
				, #{item.vodChatTime}
			)
		</foreach>
	</insert>
	
	<select id="getChatHistory"  parameterType="ChatDTO" resultType="ChatDTO">
	/*app_live.getChatHistory*/
     select    CHAT_SEQ      
             , CHAT_CONTENT as content
             , CHAT_USER_ID as userId
             , CHAT_USER_NAME as userName
             , LB_SEQ
             , VOD_SAVE_YN
             , VOD_CHAT_TIME
             , CHAT_ADMIN_YN as adminChk
             
      from   tglive_chat_history
      
     WHERE   LB_SEQ = #{lbSeq}
             AND VOD_SAVE_YN = 'Y'
             AND VOD_CHAT_TIME BETWEEN TO_NUMBER(#{currentTime}) and TO_NUMBER(#{currentTime})+10
             
  ORDER BY   CHAT_REG_DATE DESC
	</select>
</mapper>